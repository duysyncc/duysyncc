{"version":3,"sources":["constants/web3/getWeb3.js","constants/contracts/ecr20.js","constants/contracts/PancakeRouter.js","components/TokenSearch/index.jsx","pages/Swap/index.jsx","pages/Liquidity/index.jsx","pages/Faucet/index.jsx","constants/contracts/Stake.js","pages/Stake/index.jsx","constants/contracts/Tx8Swap.js","pages/Tx8Swap/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["getWeb3","a","window","ethereum","web3","Web3","enable","console","error","log","provider","providers","HttpProvider","alert","erc20","addressContract","eth","Contract","ERC20_ABI","PancakeRouter","PancakeRouter_ABI","TokenSearch","props","initListAddress","useState","listAddress","setListAddress","listInfo","setListInfo","handedClickCLose","getInfoToken","addressToken","getAccounts","accounts","contract","methods","balanceOf","call","balance","decimals","symbol","toFixed","useEffect","listInfo_","Promise","all","map","address","push","getInfoList","className","size","icon","faTimesCircle","onClick","type","placeholder","onChange","even","target","value","length","handedClickCard","SwapPage","showWindow","setShowWindow","count","setAccount","inputToken","tokenA","setTokenA","tokenB","setTokenB","routerAddress","setInfoToken","token","tokenStateSet","fetWeb3Init","infoToken","step","onBlur","BigInt","toString","getAmountsOut","utils","toBN","faPlusCircle","faSortDown","getAmountsIn","getAmountIn","contractTokenA","allowance","allowanceTokenA","contractTokenB","allowanceTokenB","approve","send","from","swapExactTokensForTokens","Date","getTime","data","transactionHash","LiquidityPage","faPlus","addLiquidity","FaucetPage","listTokenAddress","setInfoTokenInit","listToken_","contractToken","mint","Stake","Stake_ABI","StakePage","balanceTx8","setBalanceTx8","dateStake","setDateStake","numTokenStake","setNumTokenStake","profit","setProfit","infoStake","setInfoStake","tx8Address","stakeAddress","calculateReward","amount","day","setInfoStakeInit","stakes","info","initial","payday","reward","startday","NaN","numReward","id","contractTx8","allowanceTx8","stake","Tx8Swap","Tx8Swap_ABI","Tx8SwapPage","infoUsdt","setInfoUsdt","infoTx8","setInfoTx8","amountUsdtSwap","setAmountUsdtSwap","amountTxt8Swap","setAmountTxt8Swap","usdtAddress","swapAddress","setInfoTokenTx8Init","setInfoTokenUsdtInit","event","swapTokenBtoTokenA","contractUsdt","allowanceUsdt","swapTokenAtoTokenB","App","url","setUrl","Swap","Liquidity","Faucet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a9b51d7.chunk.js","sourcesContent":["import Web3 from 'web3';\r\n\r\nconst getWeb3 = async () => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n            // Request account access if needed\r\n            await window.ethereum.enable();\r\n            // Acccounts now exposed\r\n            return web3;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    // Legacy dapp browsers...\r\n    else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log('Injected web3 detected.');\r\n        return web3;\r\n    }\r\n    // Fallback to localhost; use dev console port by default...\r\n    else {\r\n        const provider = new Web3.providers.HttpProvider('http://127.0.0.1:9545');\r\n        const web3 = new Web3(provider);\r\n        alert('No web3 instance injected, using Local web3.');\r\n        return web3;\r\n    }\r\n};\r\nexport { getWeb3 };","import { getWeb3 } from '../web3/getWeb3';\r\nimport ERC20_ABI from '../abi/erc20.json'\r\nconst erc20 = async (addressContract) => {\r\n    let web3 = await getWeb3();\r\n    return new web3.eth.Contract(ERC20_ABI, addressContract)\r\n};\r\nexport { erc20 };","import { getWeb3 } from '../web3/getWeb3';\r\nimport PancakeRouter_ABI from '../abi/PancakeRouter.json'\r\nconst PancakeRouter = async (addressContract) => {\r\n    let web3 = await getWeb3();\r\n    return new web3.eth.Contract(PancakeRouter_ABI, addressContract)\r\n};\r\nexport { PancakeRouter };","import './styles.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { getWeb3 } from '../../constants/web3/getWeb3';\r\nimport { erc20 } from '../../constants/contracts/ecr20';\r\n\r\nfunction TokenSearch(props) {\r\n    const initListAddress = [\r\n        \"0x685aEF5Ce482700dF29Dd69b2931f86575CeFb40\",\r\n        \"0xA39a336E89A33D24B5C8a0d594B1f2A78b255825\",\r\n        \"0x4BFd1d96ce80D728F472cd397451025EF6b4Bb0b\",\r\n        \"0x56beBA0D627472b521CCd3171084C6a35B68851f\",\r\n        \"0x10A4a23dCd680b29d27CD58438Ef0E81cd147C86\",\r\n        \"0x5eBB49CF36de3967358Ed1D51B14BfF4854bF5eD\",\r\n        \"0x660FB72163Aeaa05B1F1ad530D8bE6aceb8d7431\"\r\n    ]\r\n    const [listAddress, setListAddress] = useState(initListAddress)\r\n    const [listInfo, setListInfo] = useState([])\r\n    function handedClickCLose() {\r\n        if (props.handedClickCLose) {\r\n            props.handedClickCLose();\r\n        }\r\n    }\r\n    function handedClickCard(address) {\r\n        if (props.handedClickCard) {\r\n            props.handedClickCard(address);\r\n        }\r\n    }\r\n    async function getInfoToken(addressToken) {\r\n        let web3 = await getWeb3();\r\n        let accounts = await web3.eth.getAccounts();\r\n        let contract = await erc20(addressToken);\r\n        let balance = await contract.methods.balanceOf(accounts[0]).call()\r\n        let decimals = await contract.methods.decimals().call()\r\n        let symbol = await contract.methods.symbol().call()\r\n        balance = (balance / 10 ** decimals).toFixed(3)\r\n        return { \"symbol\": symbol, \"decimals\": decimals, \"balance\": balance, \"address\": addressToken }\r\n\r\n    }\r\n    useEffect(() => {\r\n        async function getInfoList() {\r\n            let listInfo_ = []\r\n            await Promise.all(listAddress.map(async (address) => {\r\n                try {\r\n                    let { symbol, decimals, balance } = await getInfoToken(address);\r\n                    await listInfo_.push({ symbol, decimals, balance, address })\r\n                } catch (error) {\r\n                    console.log(\"Cant find token\")\r\n                }\r\n\r\n            }))\r\n            await setListInfo(listInfo_)\r\n        }\r\n        getInfoList()\r\n    }, [listAddress])\r\n    return (\r\n        <div className=\"PanelTokenSearch\">\r\n            <div className=\"MainCardTokenSearch\">\r\n                <div className=\"MainCardTokenSearchTitle\">\r\n                    <nav>Select a token</nav>\r\n                    <FontAwesomeIcon size=\"2x\" icon={faTimesCircle} onClick={handedClickCLose} />\r\n                </div>\r\n                <input type=\"text\" className=\"TokenSearchInput\" placeholder=\"Add address to find token\" onChange={async (even) => {\r\n                    let addressToken = even.target.value;\r\n                    if (addressToken.length > 35) {\r\n                        setListAddress([addressToken]);\r\n                    } else if (addressToken.length == 0) {\r\n                        setListAddress(initListAddress);\r\n                    }\r\n                }} />\r\n                <h3>Take a token</h3>\r\n                <div className=\"CardTokenPanel\">\r\n                    <div>\r\n                        {\r\n                            listInfo.map(({ symbol, balance, address }) => {\r\n                                // console.log({ symbol, balance, address });\r\n                                return (\r\n                                    <div className=\"CardToken\" key={address} >\r\n                                        <nav className=\"CardToken-Symbol\" onClick={() => { handedClickCard(address); handedClickCLose() }} > {symbol}</nav>\r\n                                        <button className=\"CardToken-Remove\"> Remove</button>\r\n                                        <nav className=\"CardToken-Token\">{balance} Token</nav>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TokenSearch;\r\n","import './styles.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle, faPlus, faSortDown } from '@fortawesome/free-solid-svg-icons'\r\nimport Web3 from 'web3';\r\nimport { getWeb3 } from '../../constants/web3/getWeb3';\r\nimport { erc20 } from '../../constants/contracts/ecr20';\r\nimport { PancakeRouter } from '../../constants/contracts/PancakeRouter';\r\nimport TokenSearch from '../../components/TokenSearch';\r\n\r\nfunction SwapPage() {\r\n  const [showWindow, setShowWindow] = useState(false)\r\n  const [count, setCount] = useState(0);\r\n  const [accounts, setAccount] = useState(\"Loading...\");\r\n\r\n  const [tokenA, setTokenA] = useState(() => {\r\n    return {\r\n      address: \"0x685aEF5Ce482700dF29Dd69b2931f86575CeFb40\",\r\n      inputToken: 0,\r\n      decimals: 0,\r\n      balance: 0,\r\n      symbol: \"\"\r\n    }\r\n  })\r\n  const [tokenB, setTokenB] = useState(() => {\r\n    return {\r\n      address: \"0xA39a336E89A33D24B5C8a0d594B1f2A78b255825\",\r\n      inputToken: 0,\r\n      decimals: 0,\r\n      balance: 0,\r\n      symbol: \"\"\r\n    }\r\n  })\r\n  const routerAddress = \"0xa7b58c3dc64acE79cCB4541415f841c5201FAEBf\";\r\n  async function getInfoToken(addressToken) {\r\n    let web3 = await getWeb3();\r\n    let accounts = await web3.eth.getAccounts();\r\n    let contract = await erc20(addressToken);\r\n    let balance = await contract.methods.balanceOf(accounts[0]).call()\r\n    let decimals = await contract.methods.decimals().call()\r\n    let symbol = await contract.methods.symbol().call()\r\n    return { \"symbol\": symbol, \"decimals\": decimals, \"balance\": balance, \"address\": addressToken }\r\n  }\r\n  async function setInfoToken(address, token, tokenStateSet) {\r\n    let { symbol, decimals, balance } = await getInfoToken(address);\r\n    tokenStateSet({\r\n      ...token,\r\n      address: address,\r\n      balance: balance,\r\n      decimals: decimals,\r\n      symbol: symbol\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    async function fetWeb3Init() {\r\n      let web3 = await getWeb3();\r\n      let accounts = await web3.eth.getAccounts();\r\n      setAccount(accounts[0]);\r\n      await setInfoToken(tokenA.address, tokenA, setTokenA);\r\n      await setInfoToken(tokenB.address, tokenB, setTokenB);\r\n    }\r\n    fetWeb3Init();\r\n  }, []);\r\n\r\n  function transferBalance(value, decimals) {\r\n    let decimals_ = Web3.utils.toBN(decimals);\r\n    let amount = Web3.utils.toHex(Web3.utils.toBN(value).mul(Web3.utils.toBN(10).pow(decimals_)));\r\n    return amount\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showWindow == \"A\" ? <TokenSearch\r\n        handedClickCLose={() => { setShowWindow(false) }}\r\n        handedClickCard={async (address) => {\r\n          await setInfoToken(address, tokenA, setTokenA)\r\n        }}\r\n        infoToken={[tokenA, setTokenA]} /> : null}\r\n      {showWindow == \"B\" ? <TokenSearch\r\n        handedClickCLose={() => { setShowWindow(false) }}\r\n        handedClickCard={async (address) => {\r\n          await setInfoToken(address, tokenB, setTokenB)\r\n        }}\r\n        infoToken={[tokenB, setTokenB]} /> : null}\r\n      <h3>{accounts}</h3>\r\n      <div className=\"MainContent\">\r\n        <div className=\"MainCard\">\r\n          <nav className=\"TitleCard\">Swap</nav>\r\n          <div className=\"BoxInput\">\r\n            <div className=\"BoxInput-Info\">\r\n              <nav>Input</nav>\r\n              <nav>Balance:{(tokenA.balance / 10 ** tokenA.decimals).toFixed(3)}</nav>\r\n              <nav>{tokenA.symbol} Coin</nav>\r\n            </div>\r\n            <div className=\"BoxInput-Value\">\r\n              <input type=\"number\" step=\"0.01\" placeholder=\"0.00\" value={(tokenA.inputToken / (10 ** tokenA.decimals))} onChange={(even) => {\r\n                let inputToken = even.target.value * (10 ** tokenA.decimals);\r\n                setTokenA({ ...tokenA, inputToken: inputToken });\r\n              }}\r\n                onBlur={async (even) => {\r\n                  let inputToken = (even.target.value * (10 ** 18).toFixed(3));\r\n                  console.log(BigInt(inputToken).toString())\r\n                  try {\r\n                    let contract = await PancakeRouter(routerAddress);\r\n                    let getAmountsOut = await contract.methods.getAmountsOut(\r\n                      Web3.utils.toBN(BigInt(inputToken).toString()),\r\n                      [tokenA.address, tokenB.address]\r\n                    ).call()\r\n                    getAmountsOut = getAmountsOut[1]\r\n                    console.log(getAmountsOut)\r\n                    setTokenB({ ...tokenB, inputToken: getAmountsOut });\r\n                  } catch (error) {\r\n\r\n                  }\r\n                }} />\r\n              <button onClick={() => {\r\n                setTokenA({ ...tokenA, inputToken: tokenA.balance })\r\n              }}>Max</button>\r\n              <button onClick={() => {\r\n                setShowWindow(\"A\")\r\n              }}><FontAwesomeIcon size=\"2x\" icon={faPlusCircle} />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          <FontAwesomeIcon size=\"2x\" className=\"IconPlus\" icon={faSortDown} />\r\n          <div className=\"BoxInput\">\r\n            <div className=\"BoxInput-Info\">\r\n              <nav>Input</nav>\r\n              <nav>Balance:{(tokenB.balance / 10 ** tokenB.decimals).toFixed(3)}</nav>\r\n              <nav>{tokenB.symbol} Coin</nav>\r\n            </div>\r\n            <div className=\"BoxInput-Value\">\r\n              <input type=\"number\" step=\"0.01\" placeholder=\"0.00\" value={(tokenB.inputToken / (10 ** tokenB.decimals))} onChange={(even) => {\r\n                let inputToken = even.target.value * (10 ** tokenB.decimals);\r\n                setTokenB({ ...tokenB, inputToken: inputToken });\r\n              }}\r\n                onBlur={async (even) => {\r\n                  let inputToken = (even.target.value * (10 ** 18).toFixed(3));\r\n                  console.log(BigInt(inputToken).toString())\r\n                  try {\r\n                    let contract = await PancakeRouter(routerAddress);\r\n                    let getAmountIn = await contract.methods.getAmountsIn(\r\n                      Web3.utils.toBN(BigInt(inputToken).toString()),\r\n                      [tokenA.address, tokenB.address]\r\n                    ).call()\r\n                    getAmountIn = getAmountIn[0]\r\n                    console.log(getAmountIn)\r\n                    setTokenA({ ...tokenA, inputToken: getAmountIn });\r\n                  } catch (error) {\r\n\r\n                  }\r\n                }} />\r\n              <button onClick={() => {\r\n                setTokenB({ ...tokenB, inputToken: tokenB.balance })\r\n              }}>Max</button>\r\n              <button onClick={() => {\r\n                setShowWindow(\"B\")\r\n              }}><FontAwesomeIcon size=\"2x\" icon={faPlusCircle} />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"BoxInput-OverView\">\r\n            <ul>\r\n              <li>A per B</li>\r\n              <li>Poor Share</li>\r\n              <li>B per A</li>\r\n            </ul>\r\n            <ul>\r\n              <li>50</li>\r\n              <li>{count}</li>\r\n              <li>50</li>\r\n            </ul>\r\n          </div>\r\n          <button className=\"Button-Confirm\" onClick={async () => {\r\n            let contractTokenA = await erc20(tokenA.address);\r\n            let allowanceTokenA = await await contractTokenA.methods.allowance(accounts, routerAddress).call();\r\n            let contractTokenB = await erc20(tokenB.address);\r\n            let allowanceTokenB = await await contractTokenB.methods.allowance(accounts, routerAddress).call();\r\n            console.log(allowanceTokenA)\r\n            console.log(tokenA.inputToken)\r\n\r\n            if (+tokenA.inputToken > +allowanceTokenA) {\r\n              alert(\"Approve token \" + tokenA.symbol)\r\n              await contractTokenA.methods.approve(routerAddress, Web3.utils.toBN(BigInt(10 ** 50).toString())).send({ from: accounts })\r\n            }\r\n            if (+tokenB.inputToken > +allowanceTokenB) {\r\n              alert(\"Approve token \", tokenB.symbol)\r\n              await contractTokenB.methods.approve(routerAddress, Web3.utils.toBN(BigInt(10 ** 50).toString())).send({ from: accounts })\r\n            }\r\n\r\n\r\n            alert(\"Swap now\")\r\n            let contract = await PancakeRouter(routerAddress);\r\n            var data = await contract.methods.swapExactTokensForTokens(\r\n              Web3.utils.toBN(BigInt(tokenA.inputToken).toString()), //amountIn\r\n              Web3.utils.toBN(BigInt(tokenB.inputToken).toString()),//amountOutMin\r\n              [tokenA.address, tokenB.address], //path\r\n              accounts, //to\r\n              Web3.utils.toBN(new Date().getTime() + 20 * 60), //deadline\r\n            ).send({ from: accounts })\r\n            alert(\"Swap Success, Check on https://mumbai.polygonscan.com/tx/\" + data.transactionHash)\r\n          }}>Swap</button>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default SwapPage;\r\n","import './styles.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport Web3 from 'web3';\r\nimport { getWeb3 } from '../../constants/web3/getWeb3';\r\nimport { erc20 } from '../../constants/contracts/ecr20';\r\nimport { PancakeRouter } from '../../constants/contracts/PancakeRouter';\r\nimport TokenSearch from '../../components/TokenSearch';\r\n\r\nfunction LiquidityPage() {\r\n  const [showWindow, setShowWindow] = useState(false)\r\n  const [count, setCount] = useState(0);\r\n  const [accounts, setAccount] = useState(\"Loading...\");\r\n\r\n  const [tokenA, setTokenA] = useState(() => {\r\n    return {\r\n      address: \"0x685aEF5Ce482700dF29Dd69b2931f86575CeFb40\",\r\n      inputToken: 0,\r\n      decimals: 0,\r\n      balance: 0,\r\n      symbol: \"\"\r\n    }\r\n  })\r\n  const [tokenB, setTokenB] = useState(() => {\r\n    return {\r\n      address: \"0xa39a336e89a33d24b5c8a0d594b1f2a78b255825\",\r\n      inputToken: 0,\r\n      decimals: 0,\r\n      balance: 0,\r\n      symbol: \"\"\r\n    }\r\n  })\r\n  const routerAddress = \"0xa7b58c3dc64acE79cCB4541415f841c5201FAEBf\";\r\n\r\n  async function getInfoToken(addressToken) {\r\n    let web3 = await getWeb3();\r\n    let accounts = await web3.eth.getAccounts();\r\n    let contract = await erc20(addressToken);\r\n    let balance = await contract.methods.balanceOf(accounts[0]).call()\r\n    let decimals = await contract.methods.decimals().call()\r\n    let symbol = await contract.methods.symbol().call()\r\n    return { \"symbol\": symbol, \"decimals\": decimals, \"balance\": balance, \"address\": addressToken }\r\n  }\r\n  async function setInfoToken(address, token, tokenStateSet) {\r\n    let { symbol, decimals, balance } = await getInfoToken(address);\r\n    tokenStateSet({\r\n      ...token,\r\n      address: address,\r\n      balance: balance,\r\n      decimals: decimals,\r\n      symbol: symbol\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    async function fetWeb3Init() {\r\n      let web3 = await getWeb3();\r\n      let accounts = await web3.eth.getAccounts();\r\n      setAccount(accounts[0]);\r\n      await setInfoToken(tokenA.address, tokenA, setTokenA);\r\n      await setInfoToken(tokenB.address, tokenB, setTokenB);\r\n    }\r\n    fetWeb3Init();\r\n  }, []);\r\n\r\n  function transferBalance(value, decimals) {\r\n    let decimals_ = Web3.utils.toBN(decimals);\r\n    let amount = Web3.utils.toHex(Web3.utils.toBN(value).mul(Web3.utils.toBN(10).pow(decimals_)));\r\n    return amount\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showWindow == \"A\" ? <TokenSearch\r\n        handedClickCLose={() => { setShowWindow(false) }}\r\n        handedClickCard={async (address) => {\r\n          await setInfoToken(address, tokenA, setTokenA)\r\n        }}\r\n        infoToken={[tokenA, setTokenA]} /> : null}\r\n      {showWindow == \"B\" ? <TokenSearch\r\n        handedClickCLose={() => { setShowWindow(false) }}\r\n        handedClickCard={async (address) => {\r\n          await setInfoToken(address, tokenB, setTokenB)\r\n        }}\r\n        infoToken={[tokenB, setTokenB]} /> : null}\r\n      <h3>{accounts}</h3>\r\n      <div className=\"MainContent\">\r\n        <div className=\"MainCard\">\r\n          <nav className=\"TitleCard\">Liquidity</nav>\r\n          <div className=\"BoxInput\">\r\n            <div className=\"BoxInput-Info\">\r\n              <nav>Input</nav>\r\n              <nav>Balance:{(tokenA.balance / 10 ** tokenA.decimals).toFixed(3)}</nav>\r\n              <nav>{tokenA.symbol} Coin</nav>\r\n            </div>\r\n            <div className=\"BoxInput-Value\">\r\n              <input type=\"number\" step=\"0.01\" placeholder=\"0.00\" value={(tokenA.inputToken / (10 ** tokenA.decimals))} onChange={(even) => {\r\n                let inputToken = even.target.value * (10 ** tokenA.decimals);\r\n                setTokenA({ ...tokenA, inputToken: inputToken });\r\n              }}\r\n                onBlur={async (even) => {\r\n                  let inputToken = (even.target.value * (10 ** tokenA.decimals).toFixed(3));\r\n                  console.log(BigInt(inputToken).toString())\r\n                  try {\r\n                    let contract = await PancakeRouter(routerAddress);\r\n                    let getAmountsOut = await contract.methods.getAmountsOut(\r\n                      Web3.utils.toBN(BigInt(10000).toString()),\r\n                      [tokenA.address, tokenB.address]\r\n                    ).call()\r\n                    getAmountsOut = getAmountsOut[1] / 10000\r\n                    getAmountsOut = (inputToken * getAmountsOut).toFixed(0)\r\n                    console.log(getAmountsOut)\r\n                    setTokenB({ ...tokenB, inputToken: getAmountsOut });\r\n                  } catch (error) {\r\n\r\n                  }\r\n                }} />\r\n              <button onClick={() => {\r\n                setTokenA({ ...tokenA, inputToken: tokenA.balance })\r\n              }}>Max</button>\r\n              <button onClick={() => {\r\n                setShowWindow(\"A\")\r\n              }}><FontAwesomeIcon size=\"2x\" icon={faPlusCircle} />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          <FontAwesomeIcon size=\"2x\" className=\"IconPlus\" icon={faPlus} />\r\n          <div className=\"BoxInput\">\r\n            <div className=\"BoxInput-Info\">\r\n              <nav>Input</nav>\r\n              <nav>Balance:{(tokenB.balance / 10 ** tokenB.decimals).toFixed(3)}</nav>\r\n              <nav>{tokenB.symbol} Coin</nav>\r\n            </div>\r\n            <div className=\"BoxInput-Value\">\r\n              <input type=\"number\" step=\"0.01\" placeholder=\"0.00\" value={(tokenB.inputToken / (10 ** tokenB.decimals))} onChange={(even) => {\r\n                let inputToken = even.target.value * (10 ** tokenB.decimals);\r\n                setTokenB({ ...tokenB, inputToken: inputToken });\r\n              }}\r\n                onBlur={async (even) => {\r\n                  let inputToken = (even.target.value * (10 ** tokenB.decimals).toFixed(3));\r\n                  console.log(BigInt(inputToken).toString())\r\n                  try {\r\n                    let contract = await PancakeRouter(routerAddress);\r\n                    let getAmountIn = await contract.methods.getAmountsIn(\r\n                      Web3.utils.toBN(BigInt(10000).toString()),\r\n                      [tokenA.address, tokenB.address]\r\n                    ).call()\r\n                    getAmountIn = getAmountIn[0] / 10000\r\n                    getAmountIn = (inputToken * getAmountIn).toFixed(0)\r\n                    console.log(getAmountIn)\r\n                    setTokenA({ ...tokenA, inputToken: getAmountIn });\r\n                  } catch (error) {\r\n\r\n                  }\r\n                }} />\r\n              <button onClick={() => {\r\n                setTokenB({ ...tokenB, inputToken: tokenB.balance })\r\n              }}>Max</button>\r\n              <button onClick={() => {\r\n                setShowWindow(\"B\")\r\n              }}><FontAwesomeIcon size=\"2x\" icon={faPlusCircle} />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"BoxInput-OverView\">\r\n            <ul>\r\n              <li>A per B</li>\r\n              <li>Poor Share</li>\r\n              <li>B per A</li>\r\n            </ul>\r\n            <ul>\r\n              <li>50</li>\r\n              <li>{count}</li>\r\n              <li>50</li>\r\n            </ul>\r\n          </div>\r\n          <button className=\"Button-Confirm\" onClick={async () => {\r\n            let contractTokenA = await erc20(tokenA.address);\r\n            let allowanceTokenA = await await contractTokenA.methods.allowance(accounts, routerAddress).call();\r\n            let contractTokenB = await erc20(tokenB.address);\r\n            let allowanceTokenB = await await contractTokenB.methods.allowance(accounts, routerAddress).call();\r\n            console.log(allowanceTokenA)\r\n            console.log(allowanceTokenB)\r\n\r\n            if (+tokenA.inputToken > +allowanceTokenA) {\r\n              alert(\"Approve token  \" + tokenA.symbol)\r\n              await contractTokenA.methods.approve(routerAddress, Web3.utils.toBN(BigInt(10 ** 50).toString())).send({ from: accounts })\r\n            }\r\n            if (+tokenB.inputToken > +allowanceTokenB) {\r\n              alert(\"Approve token  \" + tokenB.symbol)\r\n              await contractTokenB.methods.approve(routerAddress, Web3.utils.toBN(BigInt(10 ** 50).toString())).send({ from: accounts })\r\n            }\r\n            \r\n            alert(\"Add Liquidity now\")\r\n            let contract = await PancakeRouter(routerAddress);\r\n            var data = await contract.methods.addLiquidity(\r\n              tokenA.address,\r\n              tokenB.address,\r\n              Web3.utils.toBN(BigInt(tokenA.inputToken).toString()),\r\n              Web3.utils.toBN(BigInt(tokenB.inputToken).toString()),\r\n              Web3.utils.toBN(BigInt((tokenA.inputToken * 0.99).toFixed(0)).toString()),\r\n              Web3.utils.toBN(BigInt((tokenA.inputToken * 0.99).toFixed(0)).toString()),\r\n              accounts,\r\n              Web3.utils.toBN(new Date().getTime() + 20 * 60),\r\n            ).send({ from: accounts })\r\n            alert(\"Add Liquidity, Success Check on   https://mumbai.polygonscan.com/tx/\" + data.transactionHash)\r\n          }}>Add Liquidity</button>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default LiquidityPage;\r\n","import './styles.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport { getWeb3 } from '../../constants/web3/getWeb3';\r\nimport { erc20 } from '../../constants/contracts/ecr20';\r\n\r\nfunction FaucetPage() {\r\n  const [accounts, setAccount] = useState(\"Loading...\");\r\n  const [listInfo, setListInfo] = useState([]);\r\n\r\n\r\n  const listTokenAddress = [\r\n    \"0x685aEF5Ce482700dF29Dd69b2931f86575CeFb40\",//USDT\r\n    \"0xA39a336E89A33D24B5C8a0d594B1f2A78b255825\",//tx8\r\n    \"0x4BFd1d96ce80D728F472cd397451025EF6b4Bb0b\",//sol\r\n    \"0x56beBA0D627472b521CCd3171084C6a35B68851f\",//tx9\r\n    \"0x10A4a23dCd680b29d27CD58438Ef0E81cd147C86\",//tx10\r\n    \"0x5eBB49CF36de3967358Ed1D51B14BfF4854bF5eD\",//tx11\r\n    \"0x660FB72163Aeaa05B1F1ad530D8bE6aceb8d7431\"//wmatic\r\n  ]\r\n\r\n  async function getInfoToken(addressToken) {\r\n    let web3 = await getWeb3();\r\n    let accounts = await web3.eth.getAccounts();\r\n    let contract = await erc20(addressToken);\r\n    let balance = await contract.methods.balanceOf(accounts[0]).call()\r\n    let decimals = await contract.methods.decimals().call()\r\n    let symbol = await contract.methods.symbol().call()\r\n    return { \"symbol\": symbol, \"decimals\": decimals, \"balance\": balance, \"address\": addressToken }\r\n  }\r\n  async function setInfoTokenInit() {\r\n    let listToken_ = []\r\n    await Promise.all(listTokenAddress.map(async (address) => {\r\n      let { symbol, decimals, balance } = await getInfoToken(address)\r\n      await listToken_.push({\r\n        \"symbol\": symbol,\r\n        \"decimals\": decimals,\r\n        \"balance\": balance,\r\n        \"address\": address\r\n      })\r\n    }))\r\n    await setListInfo(listToken_);\r\n  }\r\n  useEffect(() => {\r\n    async function fetWeb3Init() {\r\n      let web3 = await getWeb3();\r\n      let accounts = await web3.eth.getAccounts();\r\n\r\n      await setAccount(accounts[0]);\r\n      await setInfoTokenInit();\r\n    }\r\n    fetWeb3Init();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h3>{accounts}</h3>\r\n      <div className=\"MainContent\">\r\n        {\r\n          listInfo.map(({ address, symbol, decimals, balance }) => {\r\n            return (<button key={address} className='buttonFaucet' onClick={async () => {\r\n              let contractToken = await erc20(address);\r\n              let data = await contractToken.methods.mint(Web3.utils.toBN(BigInt(1000 * 10 ** decimals).toString())).send({ from: accounts })\r\n              await setInfoTokenInit();\r\n              alert(\"Faucet Success, Check on   https://mumbai.polygonscan.com/tx/\" + data.transactionHash)\r\n            }}> You balance {(balance / 10 ** decimals).toFixed(0)} -  Faucet 1000 {symbol}</button>)\r\n          })\r\n        }\r\n\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default FaucetPage;\r\n","import { getWeb3 } from '../web3/getWeb3';\r\nimport Stake_ABI from '../abi/Stake.json'\r\nconst Stake = async (addressContract) => {\r\n    let web3 = await getWeb3();\r\n    return new web3.eth.Contract(Stake_ABI, addressContract)\r\n};\r\nexport { Stake };","import './styles.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport { getWeb3 } from '../../constants/web3/getWeb3';\r\nimport { erc20 } from '../../constants/contracts/ecr20';\r\nimport { Stake } from '../../constants/contracts/Stake';\r\n\r\nfunction StakePage() {\r\n  const [accounts, setAccount] = useState(\"Loading...\");\r\n  const [balanceTx8, setBalanceTx8] = useState(0);\r\n  const [dateStake, setDateStake] = useState(10);\r\n  const [numTokenStake, setNumTokenStake] = useState(0);\r\n  const [profit, setProfit] = useState(0)\r\n  const [infoStake, setInfoStake] = useState({})\r\n  const tx8Address = \"0xa39a336e89a33d24b5c8a0d594b1f2a78b255825\";\r\n  const stakeAddress = \"0x9c071de4502DB22a76A464d7c0a29fF23c5d0153\";\r\n\r\n\r\n  async function getInfoToken(addressToken) {\r\n    let web3 = await getWeb3();\r\n    let accounts = await web3.eth.getAccounts();\r\n    let contract = await erc20(addressToken);\r\n    let balance = await contract.methods.balanceOf(accounts[0]).call()\r\n    let decimals = await contract.methods.decimals().call()\r\n    let symbol = await contract.methods.symbol().call()\r\n    return { \"symbol\": symbol, \"decimals\": decimals, \"balance\": balance, \"address\": addressToken }\r\n  }\r\n  async function calculateReward(amount, day) {\r\n    let contract = await Stake(stakeAddress);\r\n    return await contract.methods.calculateReward(amount, day).call()\r\n  }\r\n  async function setInfoStakeInit(address) {\r\n    let contract = await Stake(stakeAddress);\r\n    let info = await contract.methods.stakes(address).call()\r\n    await setInfoStake({\r\n      initial: info.initial,\r\n      payday: info.payday,\r\n      reward: info.reward,\r\n      startday: info.startday\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetWeb3Init() {\r\n      let web3 = await getWeb3();\r\n      let accounts = await web3.eth.getAccounts();\r\n      await setAccount(accounts[0]);\r\n      await setInfoStakeInit(accounts[0]);\r\n      let { balance } = await getInfoToken(tx8Address);\r\n      setBalanceTx8(balance);\r\n\r\n    }\r\n    fetWeb3Init();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h3>Address you account: {accounts}</h3>\r\n      <h3>Address TX8 token: {tx8Address}</h3>\r\n\r\n      <div className=\"MainContent\">\r\n        <div className=\"MainCard\">\r\n          <h2 className=\"BalanceHead\">Your TX8 balance : {(balanceTx8 / 10 ** 18).toFixed(0)} </h2>\r\n          <div className=\"SavingInfo\">\r\n\r\n            <h2>TX8 saving information</h2>\r\n            <h4>1) Saving:\t{(infoStake.initial / 10 ** 18).toFixed(3)} TX8</h4>\r\n            <h4>2) Reward:\t{(infoStake.reward / 10 ** 18).toFixed(3)} TX8</h4>\r\n            <h4>3) Start day:\t{infoStake.startday || NaN}</h4>\r\n            <h4>3) Pay day:\t{infoStake.payday || NaN}</h4>\r\n          </div>\r\n          <h4>Token stake</h4>\r\n          <div className=\"SavingAmount\">\r\n            <input type=\"number\" placeholder='Input you number token' value={(numTokenStake / 10 ** 18).toFixed(0)}\r\n              onChange={async (even) => {\r\n                let inputToken = even.target.value * 10 ** 18;\r\n                setNumTokenStake(inputToken);\r\n                let numReward = await calculateReward(Web3.utils.toBN(BigInt(inputToken).toString()), dateStake);\r\n                setProfit(numReward)\r\n              }} />\r\n            <button onClick={async () => {\r\n              setNumTokenStake(balanceTx8);\r\n              let numReward = await calculateReward(Web3.utils.toBN(BigInt(balanceTx8).toString()), dateStake);\r\n              setProfit(numReward)\r\n            }}\r\n\r\n            >MAX</button>\r\n          </div>\r\n          <h4>Day stake</h4>\r\n          <div className=\"SavingAmount\">\r\n            <input type=\"number\" placeholder='Input you day to stake token' value={dateStake}\r\n              onChange={async (even) => {\r\n                setDateStake(even.target.value);\r\n                let numReward = await calculateReward(Web3.utils.toBN(BigInt(numTokenStake).toString()), dateStake);\r\n                setProfit(numReward)\r\n              }}\r\n            />\r\n            <button onClick={async () => {\r\n              setDateStake(356);\r\n              let numReward = await calculateReward(Web3.utils.toBN(BigInt(numTokenStake).toString()), 365);\r\n              setProfit(numReward)\r\n            }}>365</button>\r\n          </div>\r\n          <h3>Profit : {(profit / 10 ** 18).toFixed(3)} TX8 after {dateStake} day</h3>\r\n          <button id='Confirm' onClick={async () => {\r\n            let contractTx8 = await erc20(tx8Address);\r\n            let allowanceTx8 = await contractTx8.methods.allowance(accounts, stakeAddress).call();\r\n            if (+numTokenStake > +allowanceTx8) {\r\n              alert(\"Approve token TX8 \")\r\n              await contractTx8.methods.approve(stakeAddress, Web3.utils.toBN(BigInt(10 ** 50).toString())).send({ from: accounts })\r\n            }\r\n\r\n            alert(\"Stake now\")\r\n            try {\r\n              let contract = await Stake(stakeAddress);\r\n              var data = await contract.methods.stake(\r\n                Web3.utils.toBN(BigInt(numTokenStake).toString()),\r\n                dateStake,\r\n              ).send({ from: accounts })\r\n              await setInfoStakeInit(accounts);\r\n              alert(\"Stake Success!, Check on https://mumbai.polygonscan.com/tx/\" + data.transactionHash)\r\n            } catch (error) {\r\n              console.log(\"Error\")\r\n            }\r\n\r\n          }}>Confirm</button>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default StakePage;\r\n","import { getWeb3 } from '../web3/getWeb3';\r\nimport Tx8Swap_ABI from '../abi/Tx8Swap.json'\r\nconst Tx8Swap = async (addressContract) => {\r\n    let web3 = await getWeb3();\r\n    return new web3.eth.Contract(Tx8Swap_ABI, addressContract)\r\n};\r\nexport { Tx8Swap };","import './styles.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport { getWeb3 } from '../../constants/web3/getWeb3';\r\nimport { erc20 } from '../../constants/contracts/ecr20';\r\nimport { Tx8Swap } from '../../constants/contracts/Tx8Swap';\r\n\r\nfunction Tx8SwapPage() {\r\n  const [accounts, setAccount] = useState(\"Loading...\");\r\n  const [infoUsdt, setInfoUsdt] = useState({});\r\n  const [infoTx8, setInfoTx8] = useState({});\r\n  const [amountUsdtSwap, setAmountUsdtSwap] = useState(0);\r\n  const [amountTxt8Swap, setAmountTxt8Swap] = useState(0);\r\n  const tx8Address = \"0xa39a336e89a33d24b5c8a0d594b1f2a78b255825\"; // Token B\r\n  const usdtAddress = \"0x685aEF5Ce482700dF29Dd69b2931f86575CeFb40\"; // Token A\r\n  const swapAddress = \"0x29798cA65E4Dd7Fc9A5f6735036b5F5D41b701c0\";\r\n\r\n  async function getInfoToken(addressToken) {\r\n    let web3 = await getWeb3();\r\n    let accounts = await web3.eth.getAccounts();\r\n    let contract = await erc20(addressToken);\r\n    let balance = await contract.methods.balanceOf(accounts[0]).call()\r\n    let decimals = await contract.methods.decimals().call()\r\n    let symbol = await contract.methods.symbol().call()\r\n    return { \"symbol\": symbol, \"decimals\": decimals, \"balance\": balance, \"address\": addressToken }\r\n  }\r\n  async function setInfoTokenTx8Init() {\r\n    let { symbol, decimals, balance } = await getInfoToken(tx8Address)\r\n    setInfoTx8({\r\n      symbol: symbol,\r\n      decimals: decimals,\r\n      balance: balance\r\n    })\r\n  }\r\n  async function setInfoTokenUsdtInit() {\r\n    let { symbol, decimals, balance } = await getInfoToken(usdtAddress)\r\n    setInfoUsdt({\r\n      symbol: symbol,\r\n      decimals: decimals,\r\n      balance: balance\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    async function fetWeb3Init() {\r\n      let web3 = await getWeb3();\r\n      let accounts = await web3.eth.getAccounts();\r\n      await setAccount(accounts[0]);\r\n      await setInfoTokenTx8Init();\r\n      await setInfoTokenUsdtInit();\r\n    }\r\n    fetWeb3Init();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h3>{accounts}</h3>\r\n      <div className=\"MainContent\">\r\n        <div className=\"MainCardTx8Swap\">\r\n          <h2 className=\"BalanceHead\">\r\n            Your TX8 balance :{(infoTx8.balance / 10 ** infoTx8.decimals).toFixed(2)}\r\n            <br />\r\n            Your USDT balance :{(infoUsdt.balance / 10 ** infoUsdt.decimals).toFixed(2)}\r\n          </h2>\r\n          <h2>Swap TX8 to USDT</h2>\r\n          <div className=\"SwapPanel\">\r\n            <input type=\"number\" className='inputToken' value={amountTxt8Swap} onChange={(event) => {\r\n              let inputToken = event.target.value;\r\n              setAmountTxt8Swap(inputToken);\r\n            }} />\r\n            <nav className='amount'>{amountTxt8Swap * 2} USDT</nav>\r\n            <button id='ButtonSwap' onClick={async () => {\r\n              let contractTx8 = await erc20(tx8Address);\r\n              let allowanceTx8 = await contractTx8.methods.allowance(accounts, swapAddress).call();\r\n              if (+amountTxt8Swap * 10 ** 18 > +allowanceTx8) {\r\n                alert(\"Approve token TX8 \")\r\n                await contractTx8.methods.approve(swapAddress, Web3.utils.toBN(BigInt(10 ** 50).toString())).send({ from: accounts })\r\n              }\r\n              alert(\"Swap now\")\r\n              try {\r\n                let contract = await Tx8Swap(swapAddress);\r\n                var data = await contract.methods.swapTokenBtoTokenA(\r\n                  Web3.utils.toBN(BigInt(amountTxt8Swap * 10 ** 18).toString()),\r\n                ).send({ from: accounts })\r\n                alert(\"Swap Success!, Check on https://mumbai.polygonscan.com/tx/\" + data.transactionHash)\r\n              } catch (error) {\r\n                console.log(\"Error\")\r\n              }\r\n              await setInfoTokenTx8Init();\r\n              await setInfoTokenUsdtInit();\r\n            }}>Swap Now</button>\r\n          </div>\r\n          <hr />\r\n          <h2>Swap USDT to TX8</h2>\r\n          <div className=\"SwapPanel\">\r\n            <input type=\"number\" className='inputToken' value={amountUsdtSwap} onChange={(event) => {\r\n              let inputToken = event.target.value;\r\n              setAmountUsdtSwap(inputToken);\r\n            }} />\r\n            <nav className='amount'>{amountUsdtSwap / 2} TX8</nav>\r\n            <button id='ButtonSwap' onClick={async () => {\r\n              let contractUsdt = await erc20(usdtAddress);\r\n              let allowanceUsdt = await contractUsdt.methods.allowance(accounts, swapAddress).call();\r\n              if (+amountUsdtSwap * 10 ** 18 > +allowanceUsdt) {\r\n                alert(\"Approve token USDT \")\r\n                await contractUsdt.methods.approve(swapAddress, Web3.utils.toBN(BigInt(10 ** 50).toString())).send({ from: accounts })\r\n              }\r\n              alert(\"Swap now\")\r\n              try {\r\n                let contract = await Tx8Swap(swapAddress);\r\n                var data = await contract.methods.swapTokenAtoTokenB(\r\n                  Web3.utils.toBN(BigInt(amountUsdtSwap * 10 ** 18).toString()),\r\n                ).send({ from: accounts })\r\n                alert(\"Swap Success!, Check on https://mumbai.polygonscan.com/tx/\" + data.transactionHash)\r\n              } catch (error) {\r\n                console.log(\"Error\")\r\n              }\r\n              await setInfoTokenTx8Init();\r\n              await setInfoTokenUsdtInit();\r\n            }}>Swap Now</button>\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Tx8SwapPage;\r\n","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport SwapPage from \"./pages/Swap\"\r\nimport LiquidityPage from \"./pages/Liquidity\"\r\nimport FaucetPage from './pages/Faucet';\r\nimport StakePage from './pages/Stake';\r\nimport Tx8SwapPage from './pages/Tx8Swap';\r\nfunction App() {\r\n  const [url, setUrl] = useState(\"/Swap\")\r\n  return (\r\n    <div className=\"App\">\r\n      <ul className=\"router\">\r\n        <li className=\"Logo\">Hello Swap</li>\r\n        <li onClick={() => {\r\n          setUrl(\"/Swap\")\r\n        }}>Swap</li>\r\n\r\n        <li onClick={() => {\r\n          setUrl(\"/Liquidity\")\r\n        }}>Liquidity</li>\r\n\r\n        <li onClick={() => {\r\n          setUrl(\"/Stake\")\r\n        }}>Stake</li>\r\n\r\n        <li onClick={() => {\r\n          setUrl(\"/Tx8Swap\")\r\n        }}>Tx8Swap</li>\r\n\r\n        <li onClick={() => {\r\n          setUrl(\"/Faucet\")\r\n        }}>Faucet</li>\r\n\r\n\r\n\r\n      </ul>\r\n      <div className=\"main\">\r\n        {url == \"/Swap\" ? <SwapPage /> : null}\r\n        {url == \"/Liquidity\" ? <LiquidityPage /> : null}\r\n        {url == \"/Faucet\" ? <FaucetPage /> : null}\r\n        {url == \"/Stake\" ? <StakePage /> : null}\r\n        {url == \"/Tx8Swap\" ? <Tx8SwapPage /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}