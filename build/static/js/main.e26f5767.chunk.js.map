{"version":3,"sources":["constants/web3/getWeb3.js","constants/contracts/ecr20.js","constants/contracts/PancakeRouter.js","components/TokenSearch/index.jsx","pages/Swap/index.jsx","pages/Liquidity/index.jsx","pages/Faucet/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["getWeb3","a","window","ethereum","web3","Web3","enable","console","error","log","provider","providers","HttpProvider","alert","erc20","addressContract","eth","Contract","ERC20_ABI","PancakeRouter","PancakeRouter_ABI","TokenSearch","props","initListAddress","useState","listAddress","setListAddress","listInfo","setListInfo","handedClickCLose","getInfoToken","addressToken","getAccounts","accounts","contract","methods","balanceOf","call","balance","decimals","symbol","toFixed","useEffect","listInfo_","Promise","all","map","address","push","getInfoList","className","size","icon","faTimesCircle","onClick","type","placeholder","onChange","even","target","value","length","handedClickCard","SwapPage","showWindow","setShowWindow","count","setAccount","inputToken","tokenA","setTokenA","tokenB","setTokenB","routerAddress","setInfoToken","token","tokenStateSet","fetWeb3Init","infoToken","step","onBlur","BigInt","toString","getAmountsOut","utils","toBN","faPlusCircle","faSortDown","getAmountsIn","getAmountIn","contractTokenA","allowance","allowanceTokenA","contractTokenB","allowanceTokenB","approve","send","from","swapExactTokensForTokens","Date","getTime","data","transactionHash","LiquidityPage","faPlus","addLiquidity","FaucetPage","listTokenAddress","listToken_","contractToken","mint","App","url","setUrl","Swap","Liquidity","Faucet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wyhBAEMA,EAAO,uCAAG,kCAAAC,EAAA,0DAERC,OAAOC,SAFC,wBAGFC,EAAO,IAAIC,IAAKH,OAAOC,UAHrB,kBAMED,OAAOC,SAASG,SANlB,gCAQGF,GARH,gCAUJG,QAAQC,MAAR,MAVI,oCAcHN,OAAOE,KAdJ,wBAgBFA,EAAOF,OAAOE,KACpBG,QAAQE,IAAI,2BAjBJ,kBAkBDL,GAlBC,eAsBFM,EAAW,IAAIL,IAAKM,UAAUC,aAAa,yBAC3CR,EAAO,IAAIC,IAAKK,GACtBG,MAAM,gDAxBE,kBAyBDT,GAzBC,yDAAH,qD,SCAPU,EAAK,uCAAG,WAAOC,GAAP,eAAAd,EAAA,sEACOD,IADP,cACNI,EADM,yBAEH,IAAIA,EAAKY,IAAIC,SAASC,EAAWH,IAF9B,2CAAH,sD,SCALI,EAAa,uCAAG,WAAOJ,GAAP,eAAAd,EAAA,sEACDD,IADC,cACdI,EADc,yBAEX,IAAIA,EAAKY,IAAIC,SAASG,EAAmBL,IAF9B,2CAAH,sD,gBC4FJM,MAtFf,SAAqBC,GACjB,IAAMC,EAAkB,CACpB,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,8CARoB,EAUcC,mBAASD,GAVvB,mBAUjBE,EAViB,KAUJC,EAVI,OAWQF,mBAAS,IAXjB,mBAWjBG,EAXiB,KAWPC,EAXO,KAYxB,SAASC,IACDP,EAAMO,kBACNP,EAAMO,mBAdU,SAsBTC,EAtBS,8EAsBxB,WAA4BC,GAA5B,yBAAA9B,EAAA,sEACqBD,IADrB,cACQI,EADR,gBAEyBA,EAAKY,IAAIgB,cAFlC,cAEQC,EAFR,gBAGyBnB,EAAMiB,GAH/B,cAGQG,EAHR,iBAIwBA,EAASC,QAAQC,UAAUH,EAAS,IAAII,OAJhE,eAIQC,EAJR,iBAKyBJ,EAASC,QAAQI,WAAWF,OALrD,eAKQE,EALR,iBAMuBL,EAASC,QAAQK,SAASH,OANjD,eAMQG,EANR,OAOIF,GAAWA,EAAO,SAAG,GAAMC,IAAUE,QAAQ,GAPjD,kBAQW,CAAE,OAAUD,EAAQ,SAAYD,EAAU,QAAWD,EAAS,QAAWP,IARpF,6CAtBwB,sBAiDxB,OAhBAW,qBAAU,WAAM,4CACZ,4BAAAzC,EAAA,6DACQ0C,EAAY,GADpB,SAEUC,QAAQC,IAAIpB,EAAYqB,IAAZ,uCAAgB,WAAOC,GAAP,qBAAA9C,EAAA,+EAEgB6B,EAAaiB,GAF7B,uBAEpBP,EAFoB,EAEpBA,OAAQD,EAFY,EAEZA,SAAUD,EAFE,EAEFA,QAFE,SAGpBK,EAAUK,KAAK,CAAER,SAAQD,WAAUD,UAASS,YAHxB,yDAK1BxC,QAAQE,IAAI,mBALc,0DAAhB,wDAFtB,uBAWUmB,EAAYe,GAXtB,4CADY,uBAAC,WAAD,wBAcZM,KACD,CAACxB,IAEA,qBAAKyB,UAAU,mBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,2BAAf,UACI,iDACA,cAAC,IAAD,CAAiBC,KAAK,KAAKC,KAAMC,IAAeC,QAASzB,OAE7D,uBAAO0B,KAAK,OAAOL,UAAU,mBAAmBM,YAAY,4BAA4BC,SAAQ,uCAAE,WAAOC,GAAP,eAAAzD,EAAA,uDAC1F8B,EAAe2B,EAAKC,OAAOC,OACdC,OAAS,GACtBnC,EAAe,CAACK,IACc,GAAvBA,EAAa8B,QACpBnC,EAAeH,GAL2E,2CAAF,wDAQhG,8CACA,qBAAK2B,UAAU,iBAAf,SACI,8BAEQvB,EAASmB,KAAI,YAAmC,IAAhCN,EAA+B,EAA/BA,OAAQF,EAAuB,EAAvBA,QAASS,EAAc,EAAdA,QAE7B,OACI,sBAAKG,UAAU,YAAf,UACI,sBAAKA,UAAU,mBAAmBI,QAAS,YAvD/E,SAAyBP,GACjBzB,EAAMwC,iBACNxC,EAAMwC,gBAAgBf,GAqDyDe,CAAgBf,GAAUlB,KAA7E,cAAsGW,KACtG,wBAAQU,UAAU,mBAAlB,qBACA,sBAAKA,UAAU,kBAAf,UAAkCZ,EAAlC,cAH4BS,gBCiIrDgB,MAtMf,WAAqB,IAAD,EACkBvC,oBAAS,GAD3B,mBACXwC,EADW,KACCC,EADD,OAEQzC,mBAAS,GAFjB,mBAEX0C,EAFW,aAGa1C,mBAAS,eAHtB,mBAGXS,EAHW,KAGDkC,EAHC,OAKU3C,oBAAS,WACnC,MAAO,CACLuB,QAAS,6CACTqB,WAAY,EACZ7B,SAAU,EACVD,QAAS,EACTE,OAAQ,OAXM,mBAKX6B,EALW,KAKHC,EALG,OAcU9C,oBAAS,WACnC,MAAO,CACLuB,QAAS,6CACTqB,WAAY,EACZ7B,SAAU,EACVD,QAAS,EACTE,OAAQ,OApBM,mBAcX+B,EAdW,KAcHC,EAdG,KAuBZC,EAAgB,6CAvBJ,SAwBH3C,EAxBG,8EAwBlB,WAA4BC,GAA5B,yBAAA9B,EAAA,sEACmBD,IADnB,cACMI,EADN,gBAEuBA,EAAKY,IAAIgB,cAFhC,cAEMC,EAFN,gBAGuBnB,EAAMiB,GAH7B,cAGMG,EAHN,iBAIsBA,EAASC,QAAQC,UAAUH,EAAS,IAAII,OAJ9D,eAIMC,EAJN,iBAKuBJ,EAASC,QAAQI,WAAWF,OALnD,eAKME,EALN,iBAMqBL,EAASC,QAAQK,SAASH,OAN/C,eAMMG,EANN,yBAOS,CAAE,OAAUA,EAAQ,SAAYD,EAAU,QAAWD,EAAS,QAAWP,IAPlF,6CAxBkB,+BAiCH2C,EAjCG,kFAiClB,WAA4B3B,EAAS4B,EAAOC,GAA5C,qBAAA3E,EAAA,sEAC4C6B,EAAaiB,GADzD,gBACQP,EADR,EACQA,OAAQD,EADhB,EACgBA,SAAUD,EAD1B,EAC0BA,QACxBsC,EAAc,2BACTD,GADQ,IAEX5B,QAASA,EACTT,QAASA,EACTC,SAAUA,EACVC,OAAQA,KAPZ,4CAjCkB,sBA4DlB,OAjBAE,qBAAU,WAAM,4CACd,8BAAAzC,EAAA,sEACmBD,IADnB,cACMI,EADN,gBAEuBA,EAAKY,IAAIgB,cAFhC,cAEMC,EAFN,OAGEkC,EAAWlC,EAAS,IAHtB,SAIQyC,EAAaL,EAAOtB,QAASsB,EAAQC,GAJ7C,wBAKQI,EAAaH,EAAOxB,QAASwB,EAAQC,GAL7C,6CADc,uBAAC,WAAD,wBAQdK,KACC,IASD,gCACiB,KAAdb,EAAoB,cAAC,EAAD,CACnBnC,iBAAkB,WAAQoC,GAAc,IACxCH,gBAAe,uCAAE,WAAOf,GAAP,SAAA9C,EAAA,sEACTyE,EAAa3B,EAASsB,EAAQC,GADrB,2CAAF,sDAGfQ,UAAW,CAACT,EAAQC,KAAiB,KACxB,KAAdN,EAAoB,cAAC,EAAD,CACnBnC,iBAAkB,WAAQoC,GAAc,IACxCH,gBAAe,uCAAE,WAAOf,GAAP,SAAA9C,EAAA,sEACTyE,EAAa3B,EAASwB,EAAQC,GADrB,2CAAF,sDAGfM,UAAW,CAACP,EAAQC,KAAiB,KACvC,6BAAKvC,IACL,qBAAKiB,UAAU,cAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,YAAf,kBACA,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,wCACA,4CAAemB,EAAO/B,QAAP,SAAiB,GAAM+B,EAAO9B,WAAUE,QAAQ,MAC/D,gCAAM4B,EAAO7B,OAAb,cAEF,sBAAKU,UAAU,iBAAf,UACE,uBAAOK,KAAK,SAASwB,KAAK,OAAOvB,YAAY,OAAOI,MAAQS,EAAOD,WAAP,SAAqB,GAAMC,EAAO9B,UAAYkB,SAAU,SAACC,GACnH,IAAIU,EAAaV,EAAKC,OAAOC,MAAZ,SAAqB,GAAMS,EAAO9B,UACnD+B,EAAU,2BAAKD,GAAN,IAAcD,WAAYA,MAEnCY,OAAM,uCAAE,WAAOtB,GAAP,mBAAAzD,EAAA,6DACFmE,EAAcV,EAAKC,OAAOC,MAAQ,SAAC,GAAM,IAAInB,QAAQ,GACzDlC,QAAQE,IAAIwE,OAAOb,GAAYc,YAFzB,kBAIiB/D,EAAcsD,GAJ/B,cAIAvC,EAJA,gBAKsBA,EAASC,QAAQgD,cACzC9E,IAAK+E,MAAMC,KAAKJ,OAAOb,GAAYc,YACnC,CAACb,EAAOtB,QAASwB,EAAOxB,UACxBV,OARE,OASJ8C,GAJIA,EALA,QAS0B,GAC9B5E,QAAQE,IAAI0E,GACZX,EAAU,2BAAKD,GAAN,IAAcH,WAAYe,KAX/B,4GAAF,wDAgBR,wBAAQ7B,QAAS,WACfgB,EAAU,2BAAKD,GAAN,IAAcD,WAAYC,EAAO/B,YAD5C,iBAGA,wBAAQgB,QAAS,WACfW,EAAc,MADhB,SAEG,cAAC,IAAD,CAAiBd,KAAK,KAAKC,KAAMkC,cAKxC,cAAC,IAAD,CAAiBnC,KAAK,KAAKD,UAAU,WAAWE,KAAMmC,MACtD,sBAAKrC,UAAU,WAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,wCACA,4CAAeqB,EAAOjC,QAAP,SAAiB,GAAMiC,EAAOhC,WAAUE,QAAQ,MAC/D,gCAAM8B,EAAO/B,OAAb,cAEF,sBAAKU,UAAU,iBAAf,UACE,uBAAOK,KAAK,SAASwB,KAAK,OAAOvB,YAAY,OAAOI,MAAQW,EAAOH,WAAP,SAAqB,GAAMG,EAAOhC,UAAYkB,SAAU,SAACC,GACnH,IAAIU,EAAaV,EAAKC,OAAOC,MAAZ,SAAqB,GAAMW,EAAOhC,UACnDiC,EAAU,2BAAKD,GAAN,IAAcH,WAAYA,MAEnCY,OAAM,uCAAE,WAAOtB,GAAP,mBAAAzD,EAAA,6DACFmE,EAAcV,EAAKC,OAAOC,MAAQ,SAAC,GAAM,IAAInB,QAAQ,GACzDlC,QAAQE,IAAIwE,OAAOb,GAAYc,YAFzB,kBAIiB/D,EAAcsD,GAJ/B,cAIAvC,EAJA,gBAKoBA,EAASC,QAAQqD,aACvCnF,IAAK+E,MAAMC,KAAKJ,OAAOb,GAAYc,YACnC,CAACb,EAAOtB,QAASwB,EAAOxB,UACxBV,OARE,OASJoD,GAJIA,EALA,QASsB,GAC1BlF,QAAQE,IAAIgF,GACZnB,EAAU,2BAAKD,GAAN,IAAcD,WAAYqB,KAX/B,4GAAF,wDAgBR,wBAAQnC,QAAS,WACfkB,EAAU,2BAAKD,GAAN,IAAcH,WAAYG,EAAOjC,YAD5C,iBAGA,wBAAQgB,QAAS,WACfW,EAAc,MADhB,SAEG,cAAC,IAAD,CAAiBd,KAAK,KAAKC,KAAMkC,cAKxC,sBAAKpC,UAAU,oBAAf,UACE,+BACE,yCACA,4CACA,4CAEF,+BACE,oCACA,6BAAKgB,IACL,0CAGJ,wBAAQhB,UAAU,iBAAiBI,QAAO,sBAAE,sCAAArD,EAAA,sEACfa,EAAMuD,EAAOtB,SADE,cACtC2C,EADsC,gBAERA,EAAevD,QAAQwD,UAAU1D,EAAUwC,GAAepC,OAFlD,cAEtCuD,EAFsC,gBAGf9E,EAAMyD,EAAOxB,SAHE,cAGtC8C,EAHsC,iBAIRA,EAAe1D,QAAQwD,UAAU1D,EAAUwC,GAAepC,OAJlD,WAItCyD,EAJsC,OAK1CvF,QAAQE,IAAImF,GACZrF,QAAQE,IAAI4D,EAAOD,eAEdC,EAAOD,YAAcwB,GARgB,wBASxC/E,MAAM,iBAAmBwD,EAAO7B,QATQ,UAUlCkD,EAAevD,QAAQ4D,QAAQtB,EAAepE,IAAK+E,MAAMC,KAAKJ,OAAO,KAAD,IAAC,GAAM,KAAIC,aAAac,KAAK,CAAEC,KAAMhE,IAVvE,cAYrCsC,EAAOH,YAAc0B,GAZgB,wBAaxCjF,MAAM,iBAAkB0D,EAAO/B,QAbS,UAclCqD,EAAe1D,QAAQ4D,QAAQtB,EAAepE,IAAK+E,MAAMC,KAAKJ,OAAO,KAAD,IAAC,GAAM,KAAIC,aAAac,KAAK,CAAEC,KAAMhE,IAdvE,yBAiBrBd,EAAcsD,GAjBO,eAiBtCvC,EAjBsC,iBAkBzBA,EAASC,QAAQ+D,yBAChC7F,IAAK+E,MAAMC,KAAKJ,OAAOZ,EAAOD,YAAYc,YAC1C7E,IAAK+E,MAAMC,KAAKJ,OAAOV,EAAOH,YAAYc,YAC1C,CAACb,EAAOtB,QAASwB,EAAOxB,SACxBd,EACA5B,IAAK+E,MAAMC,MAAK,IAAIc,MAAOC,UAAY,OACvCJ,KAAK,CAAEC,KAAMhE,IAxB2B,QAkBtCoE,EAlBsC,OAyB1CxF,MAAM,2DAA6DwF,EAAKC,iBAzB9B,4CAA5C,2B,OCuCKC,MA5Mf,WAA0B,IAAD,EACa/E,oBAAS,GADtB,mBAChBwC,EADgB,KACJC,EADI,OAEGzC,mBAAS,GAFZ,mBAEhB0C,EAFgB,aAGQ1C,mBAAS,eAHjB,mBAGhBS,EAHgB,KAGNkC,EAHM,OAKK3C,oBAAS,WACnC,MAAO,CACLuB,QAAS,6CACTqB,WAAY,EACZ7B,SAAU,EACVD,QAAS,EACTE,OAAQ,OAXW,mBAKhB6B,EALgB,KAKRC,EALQ,OAcK9C,oBAAS,WACnC,MAAO,CACLuB,QAAS,6CACTqB,WAAY,EACZ7B,SAAU,EACVD,QAAS,EACTE,OAAQ,OApBW,mBAchB+B,EAdgB,KAcRC,EAdQ,KAuBjBC,EAAgB,6CAvBC,SAyBR3C,EAzBQ,8EAyBvB,WAA4BC,GAA5B,yBAAA9B,EAAA,sEACmBD,IADnB,cACMI,EADN,gBAEuBA,EAAKY,IAAIgB,cAFhC,cAEMC,EAFN,gBAGuBnB,EAAMiB,GAH7B,cAGMG,EAHN,iBAIsBA,EAASC,QAAQC,UAAUH,EAAS,IAAII,OAJ9D,eAIMC,EAJN,iBAKuBJ,EAASC,QAAQI,WAAWF,OALnD,eAKME,EALN,iBAMqBL,EAASC,QAAQK,SAASH,OAN/C,eAMMG,EANN,yBAOS,CAAE,OAAUA,EAAQ,SAAYD,EAAU,QAAWD,EAAS,QAAWP,IAPlF,6CAzBuB,+BAkCR2C,EAlCQ,kFAkCvB,WAA4B3B,EAAS4B,EAAOC,GAA5C,qBAAA3E,EAAA,sEAC4C6B,EAAaiB,GADzD,gBACQP,EADR,EACQA,OAAQD,EADhB,EACgBA,SAAUD,EAD1B,EAC0BA,QACxBsC,EAAc,2BACTD,GADQ,IAEX5B,QAASA,EACTT,QAASA,EACTC,SAAUA,EACVC,OAAQA,KAPZ,4CAlCuB,sBA6DvB,OAjBAE,qBAAU,WAAM,4CACd,8BAAAzC,EAAA,sEACmBD,IADnB,cACMI,EADN,gBAEuBA,EAAKY,IAAIgB,cAFhC,cAEMC,EAFN,OAGEkC,EAAWlC,EAAS,IAHtB,SAIQyC,EAAaL,EAAOtB,QAASsB,EAAQC,GAJ7C,wBAKQI,EAAaH,EAAOxB,QAASwB,EAAQC,GAL7C,6CADc,uBAAC,WAAD,wBAQdK,KACC,IASD,gCACiB,KAAdb,EAAoB,cAAC,EAAD,CACnBnC,iBAAkB,WAAQoC,GAAc,IACxCH,gBAAe,uCAAE,WAAOf,GAAP,SAAA9C,EAAA,sEACTyE,EAAa3B,EAASsB,EAAQC,GADrB,2CAAF,sDAGfQ,UAAW,CAACT,EAAQC,KAAiB,KACxB,KAAdN,EAAoB,cAAC,EAAD,CACnBnC,iBAAkB,WAAQoC,GAAc,IACxCH,gBAAe,uCAAE,WAAOf,GAAP,SAAA9C,EAAA,sEACTyE,EAAa3B,EAASwB,EAAQC,GADrB,2CAAF,sDAGfM,UAAW,CAACP,EAAQC,KAAiB,KACvC,6BAAKvC,IACL,qBAAKiB,UAAU,cAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,YAAf,uBACA,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,wCACA,4CAAemB,EAAO/B,QAAP,SAAiB,GAAM+B,EAAO9B,WAAUE,QAAQ,MAC/D,gCAAM4B,EAAO7B,OAAb,cAEF,sBAAKU,UAAU,iBAAf,UACE,uBAAOK,KAAK,SAASwB,KAAK,OAAOvB,YAAY,OAAOI,MAAQS,EAAOD,WAAP,SAAqB,GAAMC,EAAO9B,UAAYkB,SAAU,SAACC,GACnH,IAAIU,EAAaV,EAAKC,OAAOC,MAAZ,SAAqB,GAAMS,EAAO9B,UACnD+B,EAAU,2BAAKD,GAAN,IAAcD,WAAYA,MAEnCY,OAAM,uCAAE,WAAOtB,GAAP,mBAAAzD,EAAA,6DACFmE,EAAcV,EAAKC,OAAOC,MAAQ,SAAC,GAAMS,EAAO9B,UAAUE,QAAQ,GACtElC,QAAQE,IAAIwE,OAAOb,GAAYc,YAFzB,kBAIiB/D,EAAcsD,GAJ/B,cAIAvC,EAJA,gBAKsBA,EAASC,QAAQgD,cACzC9E,IAAK+E,MAAMC,KAAKJ,OAAO,KAAOC,YAC9B,CAACb,EAAOtB,QAASwB,EAAOxB,UACxBV,OARE,OASJ8C,GAJIA,EALA,QAS0B,GAAK,IACnCA,GAAiBf,EAAae,GAAe1C,QAAQ,GACrDlC,QAAQE,IAAI0E,GACZX,EAAU,2BAAKD,GAAN,IAAcH,WAAYe,KAZ/B,4GAAF,wDAiBR,wBAAQ7B,QAAS,WACfgB,EAAU,2BAAKD,GAAN,IAAcD,WAAYC,EAAO/B,YAD5C,iBAGA,wBAAQgB,QAAS,WACfW,EAAc,MADhB,SAEG,cAAC,IAAD,CAAiBd,KAAK,KAAKC,KAAMkC,cAKxC,cAAC,IAAD,CAAiBnC,KAAK,KAAKD,UAAU,WAAWE,KAAMoD,MACtD,sBAAKtD,UAAU,WAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,wCACA,4CAAeqB,EAAOjC,QAAP,SAAiB,GAAMiC,EAAOhC,WAAUE,QAAQ,MAC/D,gCAAM8B,EAAO/B,OAAb,cAEF,sBAAKU,UAAU,iBAAf,UACE,uBAAOK,KAAK,SAASwB,KAAK,OAAOvB,YAAY,OAAOI,MAAQW,EAAOH,WAAP,SAAqB,GAAMG,EAAOhC,UAAYkB,SAAU,SAACC,GACnH,IAAIU,EAAaV,EAAKC,OAAOC,MAAZ,SAAqB,GAAMW,EAAOhC,UACnDiC,EAAU,2BAAKD,GAAN,IAAcH,WAAYA,MAEnCY,OAAM,uCAAE,WAAOtB,GAAP,mBAAAzD,EAAA,6DACFmE,EAAcV,EAAKC,OAAOC,MAAQ,SAAC,GAAMW,EAAOhC,UAAUE,QAAQ,GACtElC,QAAQE,IAAIwE,OAAOb,GAAYc,YAFzB,kBAIiB/D,EAAcsD,GAJ/B,cAIAvC,EAJA,gBAKoBA,EAASC,QAAQqD,aACvCnF,IAAK+E,MAAMC,KAAKJ,OAAO,KAAOC,YAC9B,CAACb,EAAOtB,QAASwB,EAAOxB,UACxBV,OARE,OASJoD,GAJIA,EALA,QASsB,GAAK,IAC/BA,GAAerB,EAAaqB,GAAahD,QAAQ,GACjDlC,QAAQE,IAAIgF,GACZnB,EAAU,2BAAKD,GAAN,IAAcD,WAAYqB,KAZ/B,4GAAF,wDAiBR,wBAAQnC,QAAS,WACfkB,EAAU,2BAAKD,GAAN,IAAcH,WAAYG,EAAOjC,YAD5C,iBAGA,wBAAQgB,QAAS,WACfW,EAAc,MADhB,SAEG,cAAC,IAAD,CAAiBd,KAAK,KAAKC,KAAMkC,cAKxC,sBAAKpC,UAAU,oBAAf,UACE,+BACE,yCACA,4CACA,4CAEF,+BACE,oCACA,6BAAKgB,IACL,0CAGJ,wBAAQhB,UAAU,iBAAiBI,QAAO,sBAAE,sCAAArD,EAAA,sEACfa,EAAMuD,EAAOtB,SADE,cACtC2C,EADsC,gBAERA,EAAevD,QAAQwD,UAAU1D,EAAUwC,GAAepC,OAFlD,cAEtCuD,EAFsC,gBAGf9E,EAAMyD,EAAOxB,SAHE,cAGtC8C,EAHsC,iBAIRA,EAAe1D,QAAQwD,UAAU1D,EAAUwC,GAAepC,OAJlD,WAItCyD,EAJsC,OAK1CvF,QAAQE,IAAImF,GACZrF,QAAQE,IAAIqF,MAEPzB,EAAOD,YAAcwB,GARgB,wBASxC/E,MAAM,kBAAoBwD,EAAO7B,QATO,UAUlCkD,EAAevD,QAAQ4D,QAAQtB,EAAepE,IAAK+E,MAAMC,KAAKJ,OAAO,KAAD,IAAC,GAAM,KAAIC,aAAac,KAAK,CAAEC,KAAMhE,IAVvE,cAYrCsC,EAAOH,YAAc0B,GAZgB,wBAaxCjF,MAAM,kBAAoB0D,EAAO/B,QAbO,UAclCqD,EAAe1D,QAAQ4D,QAAQtB,EAAepE,IAAK+E,MAAMC,KAAKJ,OAAO,KAAD,IAAC,GAAM,KAAIC,aAAac,KAAK,CAAEC,KAAMhE,IAdvE,yBAiBrBd,EAAcsD,GAjBO,eAiBtCvC,EAjBsC,iBAkBzBA,EAASC,QAAQsE,aAChCpC,EAAOtB,QACPwB,EAAOxB,QACP1C,IAAK+E,MAAMC,KAAKJ,OAAOZ,EAAOD,YAAYc,YAC1C7E,IAAK+E,MAAMC,KAAKJ,OAAOV,EAAOH,YAAYc,YAC1C7E,IAAK+E,MAAMC,KAAKJ,QAA4B,IAApBZ,EAAOD,YAAmB3B,QAAQ,IAAIyC,YAC9D7E,IAAK+E,MAAMC,KAAKJ,QAA4B,IAApBZ,EAAOD,YAAmB3B,QAAQ,IAAIyC,YAC9DjD,EACA5B,IAAK+E,MAAMC,MAAK,IAAIc,MAAOC,UAAY,OACvCJ,KAAK,CAAEC,KAAMhE,IA3B2B,QAkBtCoE,EAlBsC,OA4B1CxF,MAAM,sEAAwEwF,EAAKC,iBA5BzC,4CAA5C,oC,OC9GKI,MA9Df,WAAuB,IAAD,EACWlF,mBAAS,cADpB,mBACbS,EADa,KACHkC,EADG,OAEY3C,mBAAS,IAFrB,mBAEbG,EAFa,KAEHC,EAFG,KAKd+E,EAAmB,CACvB,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,8CAZkB,SAeL7E,EAfK,8EAepB,WAA4BC,GAA5B,yBAAA9B,EAAA,sEACmBD,IADnB,cACMI,EADN,gBAEuBA,EAAKY,IAAIgB,cAFhC,cAEMC,EAFN,gBAGuBnB,EAAMiB,GAH7B,cAGMG,EAHN,iBAIsBA,EAASC,QAAQC,UAAUH,EAAS,IAAII,OAJ9D,eAIMC,EAJN,iBAKuBJ,EAASC,QAAQI,WAAWF,OALnD,eAKME,EALN,iBAMqBL,EAASC,QAAQK,SAASH,OAN/C,eAMMG,EANN,yBAOS,CAAE,OAAUA,EAAQ,SAAYD,EAAU,QAAWD,EAAS,QAAWP,IAPlF,6CAfoB,sBA2CpB,OAnBAW,qBAAU,WAAM,4CACd,gCAAAzC,EAAA,sEACmBD,IADnB,cACMI,EADN,gBAEuBA,EAAKY,IAAIgB,cAFhC,cAEMC,EAFN,OAGM2E,EAAa,GAHnB,SAIQhE,QAAQC,IAAI8D,EAAiB7D,IAAjB,uCAAqB,WAAOC,GAAP,qBAAA9C,EAAA,sEACK6B,EAAaiB,GADlB,uBAC/BP,EAD+B,EAC/BA,OAAQD,EADuB,EACvBA,SAAUD,EADa,EACbA,QADa,SAE/BsE,EAAW5D,KAAK,CACpB,OAAUR,EACV,SAAYD,EACZ,QAAWD,EACX,QAAWS,IANwB,2CAArB,wDAJpB,wBAaQoB,EAAWlC,EAAS,IAb5B,yBAcQL,EAAYgF,GAdpB,6CADc,uBAAC,WAAD,wBAiBd/B,KACC,IAED,gCACE,6BAAK5C,IACL,qBAAKiB,UAAU,cAAf,SAEIvB,EAASmB,KAAI,YAA6C,IAA1CC,EAAyC,EAAzCA,QAASP,EAAgC,EAAhCA,OAAQD,EAAwB,EAAxBA,SAAUD,EAAc,EAAdA,QACzC,OAAQ,yBAAsBY,UAAU,eAAeI,QAAO,sBAAE,8BAAArD,EAAA,sEACpCa,EAAMiC,GAD8B,cAC1D8D,EAD0D,gBAE7CA,EAAc1E,QAAQ2E,KAAKzG,IAAK+E,MAAMC,KAAKJ,OAAO,aAAO,GAAM1C,IAAU2C,aAAac,KAAK,CAAEC,KAAMhE,IAFtD,OAE1DoE,EAF0D,OAG9DxF,MAAM,sEAAwEwF,EAAKC,iBAHrB,2CAAxD,2BAIUhE,EAAO,SAAG,GAAMC,IAAUE,QAAQ,GAJ5C,mBAIgED,IAJnDO,YCvBlBgE,MA3Bf,WAAgB,IAAD,EACSvF,mBAAS,SADlB,mBACNwF,EADM,KACDC,EADC,KAEb,OACE,sBAAK/D,UAAU,MAAf,UACE,qBAAIA,UAAU,SAAd,UACE,oBAAIA,UAAU,OAAd,wBACA,oBAAII,QAAS,WACX2D,EAAO,UADT,kBAIA,oBAAI3D,QAAS,WACX2D,EAAO,eADT,uBAIA,oBAAI3D,QAAS,WACX2D,EAAO,YADT,uBAIF,sBAAK/D,UAAU,OAAf,UACU,SAAP8D,EAAiB,cAACE,EAAD,IAAe,KACzB,cAAPF,EAAsB,cAACG,EAAD,IAAoB,KACnC,WAAPH,EAAmB,cAACI,EAAD,IAAiB,YCd9BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e26f5767.chunk.js","sourcesContent":["import Web3 from 'web3';\r\n\r\nconst getWeb3 = async () => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n            // Request account access if needed\r\n            await window.ethereum.enable();\r\n            // Acccounts now exposed\r\n            return web3;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    // Legacy dapp browsers...\r\n    else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log('Injected web3 detected.');\r\n        return web3;\r\n    }\r\n    // Fallback to localhost; use dev console port by default...\r\n    else {\r\n        const provider = new Web3.providers.HttpProvider('http://127.0.0.1:9545');\r\n        const web3 = new Web3(provider);\r\n        alert('No web3 instance injected, using Local web3.');\r\n        return web3;\r\n    }\r\n};\r\nexport { getWeb3 };","import { getWeb3 } from '../web3/getWeb3';\r\nimport ERC20_ABI from '../abi/erc20.json'\r\nconst erc20 = async (addressContract) => {\r\n    let web3 = await getWeb3();\r\n    return new web3.eth.Contract(ERC20_ABI, addressContract)\r\n};\r\nexport { erc20 };","import { getWeb3 } from '../web3/getWeb3';\r\nimport PancakeRouter_ABI from '../abi/PancakeRouter.json'\r\nconst PancakeRouter = async (addressContract) => {\r\n    let web3 = await getWeb3();\r\n    return new web3.eth.Contract(PancakeRouter_ABI, addressContract)\r\n};\r\nexport { PancakeRouter };","import './styles.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { getWeb3 } from '../../constants/web3/getWeb3';\r\nimport { erc20 } from '../../constants/contracts/ecr20';\r\n\r\nfunction TokenSearch(props) {\r\n    const initListAddress = [\r\n        \"0x685aEF5Ce482700dF29Dd69b2931f86575CeFb40\",\r\n        \"0xA39a336E89A33D24B5C8a0d594B1f2A78b255825\",\r\n        \"0x4BFd1d96ce80D728F472cd397451025EF6b4Bb0b\",\r\n        \"0x56beBA0D627472b521CCd3171084C6a35B68851f\",\r\n        \"0x10A4a23dCd680b29d27CD58438Ef0E81cd147C86\",\r\n        \"0x5eBB49CF36de3967358Ed1D51B14BfF4854bF5eD\",\r\n        \"0x660FB72163Aeaa05B1F1ad530D8bE6aceb8d7431\"\r\n    ]\r\n    const [listAddress, setListAddress] = useState(initListAddress)\r\n    const [listInfo, setListInfo] = useState([])\r\n    function handedClickCLose() {\r\n        if (props.handedClickCLose) {\r\n            props.handedClickCLose();\r\n        }\r\n    }\r\n    function handedClickCard(address) {\r\n        if (props.handedClickCard) {\r\n            props.handedClickCard(address);\r\n        }\r\n    }\r\n    async function getInfoToken(addressToken) {\r\n        let web3 = await getWeb3();\r\n        let accounts = await web3.eth.getAccounts();\r\n        let contract = await erc20(addressToken);\r\n        let balance = await contract.methods.balanceOf(accounts[0]).call()\r\n        let decimals = await contract.methods.decimals().call()\r\n        let symbol = await contract.methods.symbol().call()\r\n        balance = (balance / 10 ** decimals).toFixed(3)\r\n        return { \"symbol\": symbol, \"decimals\": decimals, \"balance\": balance, \"address\": addressToken }\r\n\r\n    }\r\n    useEffect(() => {\r\n        async function getInfoList() {\r\n            let listInfo_ = []\r\n            await Promise.all(listAddress.map(async (address) => {\r\n                try {\r\n                    let { symbol, decimals, balance } = await getInfoToken(address);\r\n                    await listInfo_.push({ symbol, decimals, balance, address })\r\n                } catch (error) {\r\n                    console.log(\"Cant find token\")\r\n                }\r\n\r\n            }))\r\n            await setListInfo(listInfo_)\r\n        }\r\n        getInfoList()\r\n    }, [listAddress])\r\n    return (\r\n        <div className=\"PanelTokenSearch\">\r\n            <div className=\"MainCardTokenSearch\">\r\n                <div className=\"MainCardTokenSearchTitle\">\r\n                    <nav>Select a token</nav>\r\n                    <FontAwesomeIcon size=\"2x\" icon={faTimesCircle} onClick={handedClickCLose} />\r\n                </div>\r\n                <input type=\"text\" className=\"TokenSearchInput\" placeholder=\"Add address to find token\" onChange={async (even) => {\r\n                    let addressToken = even.target.value;\r\n                    if (addressToken.length > 35) {\r\n                        setListAddress([addressToken]);\r\n                    } else if (addressToken.length == 0) {\r\n                        setListAddress(initListAddress);\r\n                    }\r\n                }} />\r\n                <h3>Take a token</h3>\r\n                <div className=\"CardTokenPanel\">\r\n                    <div>\r\n                        {\r\n                            listInfo.map(({ symbol, balance, address }) => {\r\n                                // console.log({ symbol, balance, address });\r\n                                return (\r\n                                    <div className=\"CardToken\" key={address} >\r\n                                        <nav className=\"CardToken-Symbol\" onClick={() => { handedClickCard(address); handedClickCLose() }} > {symbol}</nav>\r\n                                        <button className=\"CardToken-Remove\"> Remove</button>\r\n                                        <nav className=\"CardToken-Token\">{balance} Token</nav>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TokenSearch;\r\n","import './styles.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle, faPlus, faSortDown } from '@fortawesome/free-solid-svg-icons'\r\nimport Web3 from 'web3';\r\nimport { getWeb3 } from '../../constants/web3/getWeb3';\r\nimport { erc20 } from '../../constants/contracts/ecr20';\r\nimport { PancakeRouter } from '../../constants/contracts/PancakeRouter';\r\nimport TokenSearch from '../../components/TokenSearch';\r\n\r\nfunction SwapPage() {\r\n  const [showWindow, setShowWindow] = useState(false)\r\n  const [count, setCount] = useState(0);\r\n  const [accounts, setAccount] = useState(\"Loading...\");\r\n\r\n  const [tokenA, setTokenA] = useState(() => {\r\n    return {\r\n      address: \"0x685aEF5Ce482700dF29Dd69b2931f86575CeFb40\",\r\n      inputToken: 0,\r\n      decimals: 0,\r\n      balance: 0,\r\n      symbol: \"\"\r\n    }\r\n  })\r\n  const [tokenB, setTokenB] = useState(() => {\r\n    return {\r\n      address: \"0xA39a336E89A33D24B5C8a0d594B1f2A78b255825\",\r\n      inputToken: 0,\r\n      decimals: 0,\r\n      balance: 0,\r\n      symbol: \"\"\r\n    }\r\n  })\r\n  const routerAddress = \"0xa7b58c3dc64acE79cCB4541415f841c5201FAEBf\";\r\n  async function getInfoToken(addressToken) {\r\n    let web3 = await getWeb3();\r\n    let accounts = await web3.eth.getAccounts();\r\n    let contract = await erc20(addressToken);\r\n    let balance = await contract.methods.balanceOf(accounts[0]).call()\r\n    let decimals = await contract.methods.decimals().call()\r\n    let symbol = await contract.methods.symbol().call()\r\n    return { \"symbol\": symbol, \"decimals\": decimals, \"balance\": balance, \"address\": addressToken }\r\n  }\r\n  async function setInfoToken(address, token, tokenStateSet) {\r\n    let { symbol, decimals, balance } = await getInfoToken(address);\r\n    tokenStateSet({\r\n      ...token,\r\n      address: address,\r\n      balance: balance,\r\n      decimals: decimals,\r\n      symbol: symbol\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    async function fetWeb3Init() {\r\n      let web3 = await getWeb3();\r\n      let accounts = await web3.eth.getAccounts();\r\n      setAccount(accounts[0]);\r\n      await setInfoToken(tokenA.address, tokenA, setTokenA);\r\n      await setInfoToken(tokenB.address, tokenB, setTokenB);\r\n    }\r\n    fetWeb3Init();\r\n  }, []);\r\n\r\n  function transferBalance(value, decimals) {\r\n    let decimals_ = Web3.utils.toBN(decimals);\r\n    let amount = Web3.utils.toHex(Web3.utils.toBN(value).mul(Web3.utils.toBN(10).pow(decimals_)));\r\n    return amount\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showWindow == \"A\" ? <TokenSearch\r\n        handedClickCLose={() => { setShowWindow(false) }}\r\n        handedClickCard={async (address) => {\r\n          await setInfoToken(address, tokenA, setTokenA)\r\n        }}\r\n        infoToken={[tokenA, setTokenA]} /> : null}\r\n      {showWindow == \"B\" ? <TokenSearch\r\n        handedClickCLose={() => { setShowWindow(false) }}\r\n        handedClickCard={async (address) => {\r\n          await setInfoToken(address, tokenB, setTokenB)\r\n        }}\r\n        infoToken={[tokenB, setTokenB]} /> : null}\r\n      <h3>{accounts}</h3>\r\n      <div className=\"MainContent\">\r\n        <div className=\"MainCard\">\r\n          <nav className=\"TitleCard\">Swap</nav>\r\n          <div className=\"BoxInput\">\r\n            <div className=\"BoxInput-Info\">\r\n              <nav>Input</nav>\r\n              <nav>Balance:{(tokenA.balance / 10 ** tokenA.decimals).toFixed(3)}</nav>\r\n              <nav>{tokenA.symbol} Coin</nav>\r\n            </div>\r\n            <div className=\"BoxInput-Value\">\r\n              <input type=\"number\" step=\"0.01\" placeholder=\"0.00\" value={(tokenA.inputToken / (10 ** tokenA.decimals))} onChange={(even) => {\r\n                let inputToken = even.target.value * (10 ** tokenA.decimals);\r\n                setTokenA({ ...tokenA, inputToken: inputToken });\r\n              }}\r\n                onBlur={async (even) => {\r\n                  let inputToken = (even.target.value * (10 ** 18).toFixed(3));\r\n                  console.log(BigInt(inputToken).toString())\r\n                  try {\r\n                    let contract = await PancakeRouter(routerAddress);\r\n                    let getAmountsOut = await contract.methods.getAmountsOut(\r\n                      Web3.utils.toBN(BigInt(inputToken).toString()),\r\n                      [tokenA.address, tokenB.address]\r\n                    ).call()\r\n                    getAmountsOut = getAmountsOut[1]\r\n                    console.log(getAmountsOut)\r\n                    setTokenB({ ...tokenB, inputToken: getAmountsOut });\r\n                  } catch (error) {\r\n\r\n                  }\r\n                }} />\r\n              <button onClick={() => {\r\n                setTokenA({ ...tokenA, inputToken: tokenA.balance })\r\n              }}>Max</button>\r\n              <button onClick={() => {\r\n                setShowWindow(\"A\")\r\n              }}><FontAwesomeIcon size=\"2x\" icon={faPlusCircle} />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          <FontAwesomeIcon size=\"2x\" className=\"IconPlus\" icon={faSortDown} />\r\n          <div className=\"BoxInput\">\r\n            <div className=\"BoxInput-Info\">\r\n              <nav>Input</nav>\r\n              <nav>Balance:{(tokenB.balance / 10 ** tokenB.decimals).toFixed(3)}</nav>\r\n              <nav>{tokenB.symbol} Coin</nav>\r\n            </div>\r\n            <div className=\"BoxInput-Value\">\r\n              <input type=\"number\" step=\"0.01\" placeholder=\"0.00\" value={(tokenB.inputToken / (10 ** tokenB.decimals))} onChange={(even) => {\r\n                let inputToken = even.target.value * (10 ** tokenB.decimals);\r\n                setTokenB({ ...tokenB, inputToken: inputToken });\r\n              }}\r\n                onBlur={async (even) => {\r\n                  let inputToken = (even.target.value * (10 ** 18).toFixed(3));\r\n                  console.log(BigInt(inputToken).toString())\r\n                  try {\r\n                    let contract = await PancakeRouter(routerAddress);\r\n                    let getAmountIn = await contract.methods.getAmountsIn(\r\n                      Web3.utils.toBN(BigInt(inputToken).toString()),\r\n                      [tokenA.address, tokenB.address]\r\n                    ).call()\r\n                    getAmountIn = getAmountIn[0]\r\n                    console.log(getAmountIn)\r\n                    setTokenA({ ...tokenA, inputToken: getAmountIn });\r\n                  } catch (error) {\r\n\r\n                  }\r\n                }} />\r\n              <button onClick={() => {\r\n                setTokenB({ ...tokenB, inputToken: tokenB.balance })\r\n              }}>Max</button>\r\n              <button onClick={() => {\r\n                setShowWindow(\"B\")\r\n              }}><FontAwesomeIcon size=\"2x\" icon={faPlusCircle} />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"BoxInput-OverView\">\r\n            <ul>\r\n              <li>A per B</li>\r\n              <li>Poor Share</li>\r\n              <li>B per A</li>\r\n            </ul>\r\n            <ul>\r\n              <li>50</li>\r\n              <li>{count}</li>\r\n              <li>50</li>\r\n            </ul>\r\n          </div>\r\n          <button className=\"Button-Confirm\" onClick={async () => {\r\n            let contractTokenA = await erc20(tokenA.address);\r\n            let allowanceTokenA = await await contractTokenA.methods.allowance(accounts, routerAddress).call();\r\n            let contractTokenB = await erc20(tokenB.address);\r\n            let allowanceTokenB = await await contractTokenB.methods.allowance(accounts, routerAddress).call();\r\n            console.log(allowanceTokenA)\r\n            console.log(tokenA.inputToken)\r\n\r\n            if (+tokenA.inputToken > +allowanceTokenA) {\r\n              alert(\"Approve token \" + tokenA.symbol)\r\n              await contractTokenA.methods.approve(routerAddress, Web3.utils.toBN(BigInt(10 ** 50).toString())).send({ from: accounts })\r\n            }\r\n            if (+tokenB.inputToken > +allowanceTokenB) {\r\n              alert(\"Approve token \", tokenB.symbol)\r\n              await contractTokenB.methods.approve(routerAddress, Web3.utils.toBN(BigInt(10 ** 50).toString())).send({ from: accounts })\r\n            }\r\n\r\n            let contract = await PancakeRouter(routerAddress);\r\n            var data = await contract.methods.swapExactTokensForTokens(\r\n              Web3.utils.toBN(BigInt(tokenA.inputToken).toString()), //amountIn\r\n              Web3.utils.toBN(BigInt(tokenB.inputToken).toString()),//amountOutMin\r\n              [tokenA.address, tokenB.address], //path\r\n              accounts, //to\r\n              Web3.utils.toBN(new Date().getTime() + 20 * 60), //deadline\r\n            ).send({ from: accounts })\r\n            alert(\"Swap Success Check on https://mumbai.polygonscan.com/tx/\" + data.transactionHash)\r\n          }}>Swap</button>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default SwapPage;\r\n","import './styles.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport Web3 from 'web3';\r\nimport { getWeb3 } from '../../constants/web3/getWeb3';\r\nimport { erc20 } from '../../constants/contracts/ecr20';\r\nimport { PancakeRouter } from '../../constants/contracts/PancakeRouter';\r\nimport TokenSearch from '../../components/TokenSearch';\r\n\r\nfunction LiquidityPage() {\r\n  const [showWindow, setShowWindow] = useState(false)\r\n  const [count, setCount] = useState(0);\r\n  const [accounts, setAccount] = useState(\"Loading...\");\r\n\r\n  const [tokenA, setTokenA] = useState(() => {\r\n    return {\r\n      address: \"0x685aEF5Ce482700dF29Dd69b2931f86575CeFb40\",\r\n      inputToken: 0,\r\n      decimals: 0,\r\n      balance: 0,\r\n      symbol: \"\"\r\n    }\r\n  })\r\n  const [tokenB, setTokenB] = useState(() => {\r\n    return {\r\n      address: \"0xA39a336E89A33D24B5C8a0d594B1f2A78b255825\",\r\n      inputToken: 0,\r\n      decimals: 0,\r\n      balance: 0,\r\n      symbol: \"\"\r\n    }\r\n  })\r\n  const routerAddress = \"0xa7b58c3dc64acE79cCB4541415f841c5201FAEBf\";\r\n\r\n  async function getInfoToken(addressToken) {\r\n    let web3 = await getWeb3();\r\n    let accounts = await web3.eth.getAccounts();\r\n    let contract = await erc20(addressToken);\r\n    let balance = await contract.methods.balanceOf(accounts[0]).call()\r\n    let decimals = await contract.methods.decimals().call()\r\n    let symbol = await contract.methods.symbol().call()\r\n    return { \"symbol\": symbol, \"decimals\": decimals, \"balance\": balance, \"address\": addressToken }\r\n  }\r\n  async function setInfoToken(address, token, tokenStateSet) {\r\n    let { symbol, decimals, balance } = await getInfoToken(address);\r\n    tokenStateSet({\r\n      ...token,\r\n      address: address,\r\n      balance: balance,\r\n      decimals: decimals,\r\n      symbol: symbol\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    async function fetWeb3Init() {\r\n      let web3 = await getWeb3();\r\n      let accounts = await web3.eth.getAccounts();\r\n      setAccount(accounts[0]);\r\n      await setInfoToken(tokenA.address, tokenA, setTokenA);\r\n      await setInfoToken(tokenB.address, tokenB, setTokenB);\r\n    }\r\n    fetWeb3Init();\r\n  }, []);\r\n\r\n  function transferBalance(value, decimals) {\r\n    let decimals_ = Web3.utils.toBN(decimals);\r\n    let amount = Web3.utils.toHex(Web3.utils.toBN(value).mul(Web3.utils.toBN(10).pow(decimals_)));\r\n    return amount\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showWindow == \"A\" ? <TokenSearch\r\n        handedClickCLose={() => { setShowWindow(false) }}\r\n        handedClickCard={async (address) => {\r\n          await setInfoToken(address, tokenA, setTokenA)\r\n        }}\r\n        infoToken={[tokenA, setTokenA]} /> : null}\r\n      {showWindow == \"B\" ? <TokenSearch\r\n        handedClickCLose={() => { setShowWindow(false) }}\r\n        handedClickCard={async (address) => {\r\n          await setInfoToken(address, tokenB, setTokenB)\r\n        }}\r\n        infoToken={[tokenB, setTokenB]} /> : null}\r\n      <h3>{accounts}</h3>\r\n      <div className=\"MainContent\">\r\n        <div className=\"MainCard\">\r\n          <nav className=\"TitleCard\">Liquidity</nav>\r\n          <div className=\"BoxInput\">\r\n            <div className=\"BoxInput-Info\">\r\n              <nav>Input</nav>\r\n              <nav>Balance:{(tokenA.balance / 10 ** tokenA.decimals).toFixed(3)}</nav>\r\n              <nav>{tokenA.symbol} Coin</nav>\r\n            </div>\r\n            <div className=\"BoxInput-Value\">\r\n              <input type=\"number\" step=\"0.01\" placeholder=\"0.00\" value={(tokenA.inputToken / (10 ** tokenA.decimals))} onChange={(even) => {\r\n                let inputToken = even.target.value * (10 ** tokenA.decimals);\r\n                setTokenA({ ...tokenA, inputToken: inputToken });\r\n              }}\r\n                onBlur={async (even) => {\r\n                  let inputToken = (even.target.value * (10 ** tokenA.decimals).toFixed(3));\r\n                  console.log(BigInt(inputToken).toString())\r\n                  try {\r\n                    let contract = await PancakeRouter(routerAddress);\r\n                    let getAmountsOut = await contract.methods.getAmountsOut(\r\n                      Web3.utils.toBN(BigInt(10000).toString()),\r\n                      [tokenA.address, tokenB.address]\r\n                    ).call()\r\n                    getAmountsOut = getAmountsOut[1] / 10000\r\n                    getAmountsOut = (inputToken * getAmountsOut).toFixed(0)\r\n                    console.log(getAmountsOut)\r\n                    setTokenB({ ...tokenB, inputToken: getAmountsOut });\r\n                  } catch (error) {\r\n\r\n                  }\r\n                }} />\r\n              <button onClick={() => {\r\n                setTokenA({ ...tokenA, inputToken: tokenA.balance })\r\n              }}>Max</button>\r\n              <button onClick={() => {\r\n                setShowWindow(\"A\")\r\n              }}><FontAwesomeIcon size=\"2x\" icon={faPlusCircle} />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          <FontAwesomeIcon size=\"2x\" className=\"IconPlus\" icon={faPlus} />\r\n          <div className=\"BoxInput\">\r\n            <div className=\"BoxInput-Info\">\r\n              <nav>Input</nav>\r\n              <nav>Balance:{(tokenB.balance / 10 ** tokenB.decimals).toFixed(3)}</nav>\r\n              <nav>{tokenB.symbol} Coin</nav>\r\n            </div>\r\n            <div className=\"BoxInput-Value\">\r\n              <input type=\"number\" step=\"0.01\" placeholder=\"0.00\" value={(tokenB.inputToken / (10 ** tokenB.decimals))} onChange={(even) => {\r\n                let inputToken = even.target.value * (10 ** tokenB.decimals);\r\n                setTokenB({ ...tokenB, inputToken: inputToken });\r\n              }}\r\n                onBlur={async (even) => {\r\n                  let inputToken = (even.target.value * (10 ** tokenB.decimals).toFixed(3));\r\n                  console.log(BigInt(inputToken).toString())\r\n                  try {\r\n                    let contract = await PancakeRouter(routerAddress);\r\n                    let getAmountIn = await contract.methods.getAmountsIn(\r\n                      Web3.utils.toBN(BigInt(10000).toString()),\r\n                      [tokenA.address, tokenB.address]\r\n                    ).call()\r\n                    getAmountIn = getAmountIn[0] / 10000\r\n                    getAmountIn = (inputToken * getAmountIn).toFixed(0)\r\n                    console.log(getAmountIn)\r\n                    setTokenA({ ...tokenA, inputToken: getAmountIn });\r\n                  } catch (error) {\r\n\r\n                  }\r\n                }} />\r\n              <button onClick={() => {\r\n                setTokenB({ ...tokenB, inputToken: tokenB.balance })\r\n              }}>Max</button>\r\n              <button onClick={() => {\r\n                setShowWindow(\"B\")\r\n              }}><FontAwesomeIcon size=\"2x\" icon={faPlusCircle} />\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"BoxInput-OverView\">\r\n            <ul>\r\n              <li>A per B</li>\r\n              <li>Poor Share</li>\r\n              <li>B per A</li>\r\n            </ul>\r\n            <ul>\r\n              <li>50</li>\r\n              <li>{count}</li>\r\n              <li>50</li>\r\n            </ul>\r\n          </div>\r\n          <button className=\"Button-Confirm\" onClick={async () => {\r\n            let contractTokenA = await erc20(tokenA.address);\r\n            let allowanceTokenA = await await contractTokenA.methods.allowance(accounts, routerAddress).call();\r\n            let contractTokenB = await erc20(tokenB.address);\r\n            let allowanceTokenB = await await contractTokenB.methods.allowance(accounts, routerAddress).call();\r\n            console.log(allowanceTokenA)\r\n            console.log(allowanceTokenB)\r\n\r\n            if (+tokenA.inputToken > +allowanceTokenA) {\r\n              alert(\"Approve token  \" + tokenA.symbol)\r\n              await contractTokenA.methods.approve(routerAddress, Web3.utils.toBN(BigInt(10 ** 50).toString())).send({ from: accounts })\r\n            }\r\n            if (+tokenB.inputToken > +allowanceTokenB) {\r\n              alert(\"Approve token  \" + tokenB.symbol)\r\n              await contractTokenB.methods.approve(routerAddress, Web3.utils.toBN(BigInt(10 ** 50).toString())).send({ from: accounts })\r\n            }\r\n\r\n            let contract = await PancakeRouter(routerAddress);\r\n            var data = await contract.methods.addLiquidity(\r\n              tokenA.address,\r\n              tokenB.address,\r\n              Web3.utils.toBN(BigInt(tokenA.inputToken).toString()),\r\n              Web3.utils.toBN(BigInt(tokenB.inputToken).toString()),\r\n              Web3.utils.toBN(BigInt((tokenA.inputToken * 0.99).toFixed(0)).toString()),\r\n              Web3.utils.toBN(BigInt((tokenA.inputToken * 0.99).toFixed(0)).toString()),\r\n              accounts,\r\n              Web3.utils.toBN(new Date().getTime() + 20 * 60),\r\n            ).send({ from: accounts })\r\n            alert(\"Add Liquidity Success Check on   https://mumbai.polygonscan.com/tx/\" + data.transactionHash)\r\n          }}>Add Liquidity</button>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default LiquidityPage;\r\n","import './styles.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport { getWeb3 } from '../../constants/web3/getWeb3';\r\nimport { erc20 } from '../../constants/contracts/ecr20';\r\n\r\nfunction FaucetPage() {\r\n  const [accounts, setAccount] = useState(\"Loading...\");\r\n  const [listInfo, setListInfo] = useState([]);\r\n\r\n\r\n  const listTokenAddress = [\r\n    \"0x685aEF5Ce482700dF29Dd69b2931f86575CeFb40\",\r\n    \"0xA39a336E89A33D24B5C8a0d594B1f2A78b255825\",\r\n    \"0x4BFd1d96ce80D728F472cd397451025EF6b4Bb0b\",\r\n    \"0x56beBA0D627472b521CCd3171084C6a35B68851f\",\r\n    \"0x10A4a23dCd680b29d27CD58438Ef0E81cd147C86\",\r\n    \"0x5eBB49CF36de3967358Ed1D51B14BfF4854bF5eD\",\r\n    \"0x660FB72163Aeaa05B1F1ad530D8bE6aceb8d7431\"\r\n  ]\r\n\r\n  async function getInfoToken(addressToken) {\r\n    let web3 = await getWeb3();\r\n    let accounts = await web3.eth.getAccounts();\r\n    let contract = await erc20(addressToken);\r\n    let balance = await contract.methods.balanceOf(accounts[0]).call()\r\n    let decimals = await contract.methods.decimals().call()\r\n    let symbol = await contract.methods.symbol().call()\r\n    return { \"symbol\": symbol, \"decimals\": decimals, \"balance\": balance, \"address\": addressToken }\r\n  }\r\n  useEffect(() => {\r\n    async function fetWeb3Init() {\r\n      let web3 = await getWeb3();\r\n      let accounts = await web3.eth.getAccounts();\r\n      let listToken_ = []\r\n      await Promise.all(listTokenAddress.map(async (address) => {\r\n        let { symbol, decimals, balance } = await getInfoToken(address)\r\n        await listToken_.push({\r\n          \"symbol\": symbol,\r\n          \"decimals\": decimals,\r\n          \"balance\": balance,\r\n          \"address\": address\r\n        })\r\n      }))\r\n      await setAccount(accounts[0]);\r\n      await setListInfo(listToken_);\r\n    }\r\n    fetWeb3Init();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h3>{accounts}</h3>\r\n      <div className=\"MainContent\">\r\n        {\r\n          listInfo.map(({ address, symbol, decimals, balance }) => {\r\n            return (<button key={address} className='buttonFaucet' onClick={async () => {\r\n              let contractToken = await erc20(address);\r\n              let data = await contractToken.methods.mint(Web3.utils.toBN(BigInt(1000 * 10 ** decimals).toString())).send({ from: accounts })\r\n              alert(\"Add Liquidity Success Check on   https://mumbai.polygonscan.com/tx/\" + data.transactionHash)\r\n            }}> You balance {(balance / 10 ** decimals).toFixed(0)} -  Faucet 1000 {symbol}</button>)\r\n          })\r\n        }\r\n\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default FaucetPage;\r\n","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport SwapPage from \"./pages/Swap\"\r\nimport LiquidityPage from \"./pages/Liquidity\"\r\nimport FaucetPage from './pages/Faucet';\r\nfunction App() {\r\n  const [url, setUrl] = useState(\"/Swap\")\r\n  return (\r\n    <div className=\"App\">\r\n      <ul className=\"router\">\r\n        <li className=\"Logo\">Hello Swap</li>\r\n        <li onClick={() => {\r\n          setUrl(\"/Swap\")\r\n        }}>Swap</li>\r\n\r\n        <li onClick={() => {\r\n          setUrl(\"/Liquidity\")\r\n        }}>Liquidity</li>\r\n\r\n        <li onClick={() => {\r\n          setUrl(\"/Faucet\")\r\n        }}>Faucet</li>\r\n      </ul>\r\n      <div className=\"main\">\r\n        {url == \"/Swap\" ? <SwapPage /> : null}\r\n        {url == \"/Liquidity\" ? <LiquidityPage /> : null}\r\n        {url == \"/Faucet\" ? <FaucetPage /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}